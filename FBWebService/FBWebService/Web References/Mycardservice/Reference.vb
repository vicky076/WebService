'------------------------------------------------------------------------------
' <auto-generated>
'     這段程式碼是由工具產生的。
'     執行階段版本:4.0.30319.17929
'
'     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
'     變更將會遺失。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'原始程式碼已由 Microsoft.VSDesigner 自動產生，版本 4.0.30319.17929。
'
Namespace Mycardservice
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="MyCardServiceSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class MyCardService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private MyCardRenderOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MyCardRenderVOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InGameQueryMyCardOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetInGameIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InGameQueryMyCardForULOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MyCardQueryTradeServiceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InGameQueryBookMyCardOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BookMyCardUseageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CommitMyCardUseageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MyCardDisCardForFactoryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MyCardPreCheckOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BookGameCardOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetInGameId1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.FBWebService.My.MySettings.Default.FBWebService_Mycardservice_MyCardService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event MyCardRenderCompleted As MyCardRenderCompletedEventHandler
        
        '''<remarks/>
        Public Event MyCardRenderVCompleted As MyCardRenderVCompletedEventHandler
        
        '''<remarks/>
        Public Event InGameQueryMyCardCompleted As InGameQueryMyCardCompletedEventHandler
        
        '''<remarks/>
        Public Event GetInGameIdCompleted As GetInGameIdCompletedEventHandler
        
        '''<remarks/>
        Public Event InGameQueryMyCardForULCompleted As InGameQueryMyCardForULCompletedEventHandler
        
        '''<remarks/>
        Public Event MyCardQueryTradeServiceCompleted As MyCardQueryTradeServiceCompletedEventHandler
        
        '''<remarks/>
        Public Event InGameQueryBookMyCardCompleted As InGameQueryBookMyCardCompletedEventHandler
        
        '''<remarks/>
        Public Event BookMyCardUseageCompleted As BookMyCardUseageCompletedEventHandler
        
        '''<remarks/>
        Public Event CommitMyCardUseageCompleted As CommitMyCardUseageCompletedEventHandler
        
        '''<remarks/>
        Public Event MyCardDisCardForFactoryCompleted As MyCardDisCardForFactoryCompletedEventHandler
        
        '''<remarks/>
        Public Event MyCardPreCheckCompleted As MyCardPreCheckCompletedEventHandler
        
        '''<remarks/>
        Public Event BookGameCardCompleted As BookGameCardCompletedEventHandler
        
        '''<remarks/>
        Public Event GetInGameId1Completed As GetInGameId1CompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MyCardRender", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MyCardRender(ByVal MyCardCardId As String, ByVal MyCArdPwd As String, ByVal GameFacId As String, ByVal GameUser As String, ByVal Game_No As String, ByVal GameCard_ID As String) As ReturnSaveResult
            Dim results() As Object = Me.Invoke("MyCardRender", New Object() {MyCardCardId, MyCArdPwd, GameFacId, GameUser, Game_No, GameCard_ID})
            Return CType(results(0),ReturnSaveResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MyCardRenderAsync(ByVal MyCardCardId As String, ByVal MyCArdPwd As String, ByVal GameFacId As String, ByVal GameUser As String, ByVal Game_No As String, ByVal GameCard_ID As String)
            Me.MyCardRenderAsync(MyCardCardId, MyCArdPwd, GameFacId, GameUser, Game_No, GameCard_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MyCardRenderAsync(ByVal MyCardCardId As String, ByVal MyCArdPwd As String, ByVal GameFacId As String, ByVal GameUser As String, ByVal Game_No As String, ByVal GameCard_ID As String, ByVal userState As Object)
            If (Me.MyCardRenderOperationCompleted Is Nothing) Then
                Me.MyCardRenderOperationCompleted = AddressOf Me.OnMyCardRenderOperationCompleted
            End If
            Me.InvokeAsync("MyCardRender", New Object() {MyCardCardId, MyCArdPwd, GameFacId, GameUser, Game_No, GameCard_ID}, Me.MyCardRenderOperationCompleted, userState)
        End Sub
        
        Private Sub OnMyCardRenderOperationCompleted(ByVal arg As Object)
            If (Not (Me.MyCardRenderCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MyCardRenderCompleted(Me, New MyCardRenderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MyCardRenderV", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MyCardRenderV(ByVal MyCardCardId As String, ByVal GameFacId As String, ByVal GameUser As String, ByVal Game_No As String, ByVal GameCard_ID As String, ByVal GAME_NAME As String, ByVal GAME_SERVER As String) As ReturnSaveResult
            Dim results() As Object = Me.Invoke("MyCardRenderV", New Object() {MyCardCardId, GameFacId, GameUser, Game_No, GameCard_ID, GAME_NAME, GAME_SERVER})
            Return CType(results(0),ReturnSaveResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MyCardRenderVAsync(ByVal MyCardCardId As String, ByVal GameFacId As String, ByVal GameUser As String, ByVal Game_No As String, ByVal GameCard_ID As String, ByVal GAME_NAME As String, ByVal GAME_SERVER As String)
            Me.MyCardRenderVAsync(MyCardCardId, GameFacId, GameUser, Game_No, GameCard_ID, GAME_NAME, GAME_SERVER, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MyCardRenderVAsync(ByVal MyCardCardId As String, ByVal GameFacId As String, ByVal GameUser As String, ByVal Game_No As String, ByVal GameCard_ID As String, ByVal GAME_NAME As String, ByVal GAME_SERVER As String, ByVal userState As Object)
            If (Me.MyCardRenderVOperationCompleted Is Nothing) Then
                Me.MyCardRenderVOperationCompleted = AddressOf Me.OnMyCardRenderVOperationCompleted
            End If
            Me.InvokeAsync("MyCardRenderV", New Object() {MyCardCardId, GameFacId, GameUser, Game_No, GameCard_ID, GAME_NAME, GAME_SERVER}, Me.MyCardRenderVOperationCompleted, userState)
        End Sub
        
        Private Sub OnMyCardRenderVOperationCompleted(ByVal arg As Object)
            If (Not (Me.MyCardRenderVCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MyCardRenderVCompleted(Me, New MyCardRenderVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InGameQueryMyCard", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InGameQueryMyCard(ByVal MyCardCardId As String, ByVal Game_No As String, ByVal GameUser As String) As ReturnQueryMyCardResult
            Dim results() As Object = Me.Invoke("InGameQueryMyCard", New Object() {MyCardCardId, Game_No, GameUser})
            Return CType(results(0),ReturnQueryMyCardResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InGameQueryMyCardAsync(ByVal MyCardCardId As String, ByVal Game_No As String, ByVal GameUser As String)
            Me.InGameQueryMyCardAsync(MyCardCardId, Game_No, GameUser, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InGameQueryMyCardAsync(ByVal MyCardCardId As String, ByVal Game_No As String, ByVal GameUser As String, ByVal userState As Object)
            If (Me.InGameQueryMyCardOperationCompleted Is Nothing) Then
                Me.InGameQueryMyCardOperationCompleted = AddressOf Me.OnInGameQueryMyCardOperationCompleted
            End If
            Me.InvokeAsync("InGameQueryMyCard", New Object() {MyCardCardId, Game_No, GameUser}, Me.InGameQueryMyCardOperationCompleted, userState)
        End Sub
        
        Private Sub OnInGameQueryMyCardOperationCompleted(ByVal arg As Object)
            If (Not (Me.InGameQueryMyCardCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InGameQueryMyCardCompleted(Me, New InGameQueryMyCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInGameId", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetInGameId(ByVal para As String, ByVal EC_GAME_ID As String) As String
            Dim results() As Object = Me.Invoke("GetInGameId", New Object() {para, EC_GAME_ID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetInGameIdAsync(ByVal para As String, ByVal EC_GAME_ID As String)
            Me.GetInGameIdAsync(para, EC_GAME_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetInGameIdAsync(ByVal para As String, ByVal EC_GAME_ID As String, ByVal userState As Object)
            If (Me.GetInGameIdOperationCompleted Is Nothing) Then
                Me.GetInGameIdOperationCompleted = AddressOf Me.OnGetInGameIdOperationCompleted
            End If
            Me.InvokeAsync("GetInGameId", New Object() {para, EC_GAME_ID}, Me.GetInGameIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetInGameIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetInGameIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetInGameIdCompleted(Me, New GetInGameIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InGameQueryMyCardForUL", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InGameQueryMyCardForUL(ByVal MyCardCardId As String) As ReturnQueryMyCardResult
            Dim results() As Object = Me.Invoke("InGameQueryMyCardForUL", New Object() {MyCardCardId})
            Return CType(results(0),ReturnQueryMyCardResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InGameQueryMyCardForULAsync(ByVal MyCardCardId As String)
            Me.InGameQueryMyCardForULAsync(MyCardCardId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InGameQueryMyCardForULAsync(ByVal MyCardCardId As String, ByVal userState As Object)
            If (Me.InGameQueryMyCardForULOperationCompleted Is Nothing) Then
                Me.InGameQueryMyCardForULOperationCompleted = AddressOf Me.OnInGameQueryMyCardForULOperationCompleted
            End If
            Me.InvokeAsync("InGameQueryMyCardForUL", New Object() {MyCardCardId}, Me.InGameQueryMyCardForULOperationCompleted, userState)
        End Sub
        
        Private Sub OnInGameQueryMyCardForULOperationCompleted(ByVal arg As Object)
            If (Not (Me.InGameQueryMyCardForULCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InGameQueryMyCardForULCompleted(Me, New InGameQueryMyCardForULCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MyCardQueryTradeService", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MyCardQueryTradeService(ByVal MyCardCardId As String, ByVal Game_No As String) As ReturnQueryMyCardResult
            Dim results() As Object = Me.Invoke("MyCardQueryTradeService", New Object() {MyCardCardId, Game_No})
            Return CType(results(0),ReturnQueryMyCardResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MyCardQueryTradeServiceAsync(ByVal MyCardCardId As String, ByVal Game_No As String)
            Me.MyCardQueryTradeServiceAsync(MyCardCardId, Game_No, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MyCardQueryTradeServiceAsync(ByVal MyCardCardId As String, ByVal Game_No As String, ByVal userState As Object)
            If (Me.MyCardQueryTradeServiceOperationCompleted Is Nothing) Then
                Me.MyCardQueryTradeServiceOperationCompleted = AddressOf Me.OnMyCardQueryTradeServiceOperationCompleted
            End If
            Me.InvokeAsync("MyCardQueryTradeService", New Object() {MyCardCardId, Game_No}, Me.MyCardQueryTradeServiceOperationCompleted, userState)
        End Sub
        
        Private Sub OnMyCardQueryTradeServiceOperationCompleted(ByVal arg As Object)
            If (Not (Me.MyCardQueryTradeServiceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MyCardQueryTradeServiceCompleted(Me, New MyCardQueryTradeServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InGameQueryBookMyCard", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InGameQueryBookMyCard(ByVal GamefacID As String) As ReturnQueryMyCardResult
            Dim results() As Object = Me.Invoke("InGameQueryBookMyCard", New Object() {GamefacID})
            Return CType(results(0),ReturnQueryMyCardResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InGameQueryBookMyCardAsync(ByVal GamefacID As String)
            Me.InGameQueryBookMyCardAsync(GamefacID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InGameQueryBookMyCardAsync(ByVal GamefacID As String, ByVal userState As Object)
            If (Me.InGameQueryBookMyCardOperationCompleted Is Nothing) Then
                Me.InGameQueryBookMyCardOperationCompleted = AddressOf Me.OnInGameQueryBookMyCardOperationCompleted
            End If
            Me.InvokeAsync("InGameQueryBookMyCard", New Object() {GamefacID}, Me.InGameQueryBookMyCardOperationCompleted, userState)
        End Sub
        
        Private Sub OnInGameQueryBookMyCardOperationCompleted(ByVal arg As Object)
            If (Not (Me.InGameQueryBookMyCardCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InGameQueryBookMyCardCompleted(Me, New InGameQueryBookMyCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BookMyCardUseage", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BookMyCardUseage(ByVal MyCardCardId As String, ByVal MyCArdPwd As String, ByVal GameFacId As String, ByVal GameUser As String, ByVal Game_No As String, ByVal GameCard_ID As String) As ReturnSaveResult
            Dim results() As Object = Me.Invoke("BookMyCardUseage", New Object() {MyCardCardId, MyCArdPwd, GameFacId, GameUser, Game_No, GameCard_ID})
            Return CType(results(0),ReturnSaveResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BookMyCardUseageAsync(ByVal MyCardCardId As String, ByVal MyCArdPwd As String, ByVal GameFacId As String, ByVal GameUser As String, ByVal Game_No As String, ByVal GameCard_ID As String)
            Me.BookMyCardUseageAsync(MyCardCardId, MyCArdPwd, GameFacId, GameUser, Game_No, GameCard_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BookMyCardUseageAsync(ByVal MyCardCardId As String, ByVal MyCArdPwd As String, ByVal GameFacId As String, ByVal GameUser As String, ByVal Game_No As String, ByVal GameCard_ID As String, ByVal userState As Object)
            If (Me.BookMyCardUseageOperationCompleted Is Nothing) Then
                Me.BookMyCardUseageOperationCompleted = AddressOf Me.OnBookMyCardUseageOperationCompleted
            End If
            Me.InvokeAsync("BookMyCardUseage", New Object() {MyCardCardId, MyCArdPwd, GameFacId, GameUser, Game_No, GameCard_ID}, Me.BookMyCardUseageOperationCompleted, userState)
        End Sub
        
        Private Sub OnBookMyCardUseageOperationCompleted(ByVal arg As Object)
            If (Not (Me.BookMyCardUseageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BookMyCardUseageCompleted(Me, New BookMyCardUseageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CommitMyCardUseage", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CommitMyCardUseage(ByVal MyCardCardId As String, ByVal Game_No As String, ByVal GameCard_ID As String) As ReturnSaveResult
            Dim results() As Object = Me.Invoke("CommitMyCardUseage", New Object() {MyCardCardId, Game_No, GameCard_ID})
            Return CType(results(0),ReturnSaveResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CommitMyCardUseageAsync(ByVal MyCardCardId As String, ByVal Game_No As String, ByVal GameCard_ID As String)
            Me.CommitMyCardUseageAsync(MyCardCardId, Game_No, GameCard_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CommitMyCardUseageAsync(ByVal MyCardCardId As String, ByVal Game_No As String, ByVal GameCard_ID As String, ByVal userState As Object)
            If (Me.CommitMyCardUseageOperationCompleted Is Nothing) Then
                Me.CommitMyCardUseageOperationCompleted = AddressOf Me.OnCommitMyCardUseageOperationCompleted
            End If
            Me.InvokeAsync("CommitMyCardUseage", New Object() {MyCardCardId, Game_No, GameCard_ID}, Me.CommitMyCardUseageOperationCompleted, userState)
        End Sub
        
        Private Sub OnCommitMyCardUseageOperationCompleted(ByVal arg As Object)
            If (Not (Me.CommitMyCardUseageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CommitMyCardUseageCompleted(Me, New CommitMyCardUseageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MyCardDisCardForFactory", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MyCardDisCardForFactory(ByVal MyCardCardId As String, ByVal MyCArdPwd As String, ByVal GameFacID As String, ByVal VerifyCode As String) As ResultClass
            Dim results() As Object = Me.Invoke("MyCardDisCardForFactory", New Object() {MyCardCardId, MyCArdPwd, GameFacID, VerifyCode})
            Return CType(results(0),ResultClass)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MyCardDisCardForFactoryAsync(ByVal MyCardCardId As String, ByVal MyCArdPwd As String, ByVal GameFacID As String, ByVal VerifyCode As String)
            Me.MyCardDisCardForFactoryAsync(MyCardCardId, MyCArdPwd, GameFacID, VerifyCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MyCardDisCardForFactoryAsync(ByVal MyCardCardId As String, ByVal MyCArdPwd As String, ByVal GameFacID As String, ByVal VerifyCode As String, ByVal userState As Object)
            If (Me.MyCardDisCardForFactoryOperationCompleted Is Nothing) Then
                Me.MyCardDisCardForFactoryOperationCompleted = AddressOf Me.OnMyCardDisCardForFactoryOperationCompleted
            End If
            Me.InvokeAsync("MyCardDisCardForFactory", New Object() {MyCardCardId, MyCArdPwd, GameFacID, VerifyCode}, Me.MyCardDisCardForFactoryOperationCompleted, userState)
        End Sub
        
        Private Sub OnMyCardDisCardForFactoryOperationCompleted(ByVal arg As Object)
            If (Not (Me.MyCardDisCardForFactoryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MyCardDisCardForFactoryCompleted(Me, New MyCardDisCardForFactoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MyCardPreCheck", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MyCardPreCheck(ByVal MyCardCardId As String, ByVal MyCArdPwd As String, ByVal GameFacId As String) As ReturnSaveResult
            Dim results() As Object = Me.Invoke("MyCardPreCheck", New Object() {MyCardCardId, MyCArdPwd, GameFacId})
            Return CType(results(0),ReturnSaveResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MyCardPreCheckAsync(ByVal MyCardCardId As String, ByVal MyCArdPwd As String, ByVal GameFacId As String)
            Me.MyCardPreCheckAsync(MyCardCardId, MyCArdPwd, GameFacId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MyCardPreCheckAsync(ByVal MyCardCardId As String, ByVal MyCArdPwd As String, ByVal GameFacId As String, ByVal userState As Object)
            If (Me.MyCardPreCheckOperationCompleted Is Nothing) Then
                Me.MyCardPreCheckOperationCompleted = AddressOf Me.OnMyCardPreCheckOperationCompleted
            End If
            Me.InvokeAsync("MyCardPreCheck", New Object() {MyCardCardId, MyCArdPwd, GameFacId}, Me.MyCardPreCheckOperationCompleted, userState)
        End Sub
        
        Private Sub OnMyCardPreCheckOperationCompleted(ByVal arg As Object)
            If (Not (Me.MyCardPreCheckCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MyCardPreCheckCompleted(Me, New MyCardPreCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BookGameCard", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BookGameCard(ByVal MyCardCardId As String, ByVal MyCardPwd As String, ByVal TradeSeq As String) As BookCardResult
            Dim results() As Object = Me.Invoke("BookGameCard", New Object() {MyCardCardId, MyCardPwd, TradeSeq})
            Return CType(results(0),BookCardResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BookGameCardAsync(ByVal MyCardCardId As String, ByVal MyCardPwd As String, ByVal TradeSeq As String)
            Me.BookGameCardAsync(MyCardCardId, MyCardPwd, TradeSeq, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BookGameCardAsync(ByVal MyCardCardId As String, ByVal MyCardPwd As String, ByVal TradeSeq As String, ByVal userState As Object)
            If (Me.BookGameCardOperationCompleted Is Nothing) Then
                Me.BookGameCardOperationCompleted = AddressOf Me.OnBookGameCardOperationCompleted
            End If
            Me.InvokeAsync("BookGameCard", New Object() {MyCardCardId, MyCardPwd, TradeSeq}, Me.BookGameCardOperationCompleted, userState)
        End Sub
        
        Private Sub OnBookGameCardOperationCompleted(ByVal arg As Object)
            If (Not (Me.BookGameCardCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BookGameCardCompleted(Me, New BookGameCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInGameId1", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetInGameId1(ByVal para As String, ByVal EC_GAME_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetInGameId1", New Object() {para, EC_GAME_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetInGameId1Async(ByVal para As String, ByVal EC_GAME_ID As String)
            Me.GetInGameId1Async(para, EC_GAME_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetInGameId1Async(ByVal para As String, ByVal EC_GAME_ID As String, ByVal userState As Object)
            If (Me.GetInGameId1OperationCompleted Is Nothing) Then
                Me.GetInGameId1OperationCompleted = AddressOf Me.OnGetInGameId1OperationCompleted
            End If
            Me.InvokeAsync("GetInGameId1", New Object() {para, EC_GAME_ID}, Me.GetInGameId1OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetInGameId1OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetInGameId1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetInGameId1Completed(Me, New GetInGameId1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class ReturnSaveResult
        
        Private returnNoField As Integer
        
        Private returnMsgField As String
        
        Private myCardPointField As String
        
        Private myCardProjectNoField As String
        
        Private myCardTypeField As String
        
        '''<remarks/>
        Public Property ReturnNo() As Integer
            Get
                Return Me.returnNoField
            End Get
            Set
                Me.returnNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReturnMsg() As String
            Get
                Return Me.returnMsgField
            End Get
            Set
                Me.returnMsgField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MyCardPoint() As String
            Get
                Return Me.myCardPointField
            End Get
            Set
                Me.myCardPointField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MyCardProjectNo() As String
            Get
                Return Me.myCardProjectNoField
            End Get
            Set
                Me.myCardProjectNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MyCardType() As String
            Get
                Return Me.myCardTypeField
            End Get
            Set
                Me.myCardTypeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class BookCardResult
        
        Private saveSeqField As String
        
        Private card_idField As String
        
        Private card_PswField As String
        
        Private myCardProjNoField As String
        
        Private returnNoField As String
        
        Private returnMsgField As String
        
        '''<remarks/>
        Public Property SaveSeq() As String
            Get
                Return Me.saveSeqField
            End Get
            Set
                Me.saveSeqField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Card_id() As String
            Get
                Return Me.card_idField
            End Get
            Set
                Me.card_idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Card_Psw() As String
            Get
                Return Me.card_PswField
            End Get
            Set
                Me.card_PswField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MyCardProjNo() As String
            Get
                Return Me.myCardProjNoField
            End Get
            Set
                Me.myCardProjNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReturnNo() As String
            Get
                Return Me.returnNoField
            End Get
            Set
                Me.returnNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReturnMsg() As String
            Get
                Return Me.returnMsgField
            End Get
            Set
                Me.returnMsgField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class ResultClass
        
        Private returnNoField As Integer
        
        Private returnMsgField As String
        
        '''<remarks/>
        Public Property ReturnNo() As Integer
            Get
                Return Me.returnNoField
            End Get
            Set
                Me.returnNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReturnMsg() As String
            Get
                Return Me.returnMsgField
            End Get
            Set
                Me.returnMsgField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class ReturnQueryMyCardResult
        
        Private returnNoField As String
        
        Private returnMsgField As String
        
        Private myCardPointField As String
        
        Private myCardProjectNoField As String
        
        Private myCardTypeField As String
        
        '''<remarks/>
        Public Property ReturnNo() As String
            Get
                Return Me.returnNoField
            End Get
            Set
                Me.returnNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReturnMsg() As String
            Get
                Return Me.returnMsgField
            End Get
            Set
                Me.returnMsgField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MyCardPoint() As String
            Get
                Return Me.myCardPointField
            End Get
            Set
                Me.myCardPointField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MyCardProjectNo() As String
            Get
                Return Me.myCardProjectNoField
            End Get
            Set
                Me.myCardProjectNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MyCardType() As String
            Get
                Return Me.myCardTypeField
            End Get
            Set
                Me.myCardTypeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub MyCardRenderCompletedEventHandler(ByVal sender As Object, ByVal e As MyCardRenderCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MyCardRenderCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ReturnSaveResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ReturnSaveResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub MyCardRenderVCompletedEventHandler(ByVal sender As Object, ByVal e As MyCardRenderVCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MyCardRenderVCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ReturnSaveResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ReturnSaveResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub InGameQueryMyCardCompletedEventHandler(ByVal sender As Object, ByVal e As InGameQueryMyCardCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InGameQueryMyCardCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ReturnQueryMyCardResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ReturnQueryMyCardResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetInGameIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetInGameIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetInGameIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub InGameQueryMyCardForULCompletedEventHandler(ByVal sender As Object, ByVal e As InGameQueryMyCardForULCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InGameQueryMyCardForULCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ReturnQueryMyCardResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ReturnQueryMyCardResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub MyCardQueryTradeServiceCompletedEventHandler(ByVal sender As Object, ByVal e As MyCardQueryTradeServiceCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MyCardQueryTradeServiceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ReturnQueryMyCardResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ReturnQueryMyCardResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub InGameQueryBookMyCardCompletedEventHandler(ByVal sender As Object, ByVal e As InGameQueryBookMyCardCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InGameQueryBookMyCardCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ReturnQueryMyCardResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ReturnQueryMyCardResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub BookMyCardUseageCompletedEventHandler(ByVal sender As Object, ByVal e As BookMyCardUseageCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BookMyCardUseageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ReturnSaveResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ReturnSaveResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub CommitMyCardUseageCompletedEventHandler(ByVal sender As Object, ByVal e As CommitMyCardUseageCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CommitMyCardUseageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ReturnSaveResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ReturnSaveResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub MyCardDisCardForFactoryCompletedEventHandler(ByVal sender As Object, ByVal e As MyCardDisCardForFactoryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MyCardDisCardForFactoryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ResultClass
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ResultClass)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub MyCardPreCheckCompletedEventHandler(ByVal sender As Object, ByVal e As MyCardPreCheckCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MyCardPreCheckCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ReturnSaveResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ReturnSaveResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub BookGameCardCompletedEventHandler(ByVal sender As Object, ByVal e As BookGameCardCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BookGameCardCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As BookCardResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),BookCardResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetInGameId1CompletedEventHandler(ByVal sender As Object, ByVal e As GetInGameId1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetInGameId1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
End Namespace
