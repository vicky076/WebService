'------------------------------------------------------------------------------
' <auto-generated>
'     這段程式碼是由工具產生的。
'     執行階段版本:4.0.30319.18063
'
'     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
'     變更將會遺失。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'原始程式碼已由 Microsoft.VSDesigner 自動產生，版本 4.0.30319.18063。
'
Namespace MyCardDbServices
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="DbWebServiceSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class DbWebService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetAtmAccnoForShangHaiBillingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GenCheckCodeForShangHaiOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCardPriceForAcqOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAtmAccnoForAcqOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GenCheckCodeForAcqOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BillatmtradeUpdateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MyCardOnlinePaySellTradeListGetTradeCodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MyCardOnlinePaySellTradeListUpdateTradeCodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OnlinePay_SellTradeListInsert_USDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private chkLimit_USDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFreecardMicroView1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private TextServiceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCardNameForMyCardOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCardGameTypeForMyCardOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBankFactoryGroupForMyCardOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBankFactoryForMyCardOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBankFactoryPathOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GenMyCardErrorMsgOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ChkFreeCardCountOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMicroPaymentSeqOperationCompleted As System.Threading.SendOrPostCallback
        
        Private chkLimitOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MicropaymentChkCcardRoleOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OnlinePay_SellTradeListInsertOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MicroSellTradeRenderOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MicroSellTradeRender2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCardOperationCompleted As System.Threading.SendOrPostCallback
        
        Private preCheckMyCardForCardStoreOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCardPwdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FreecardSendSmsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MyCardSendSmsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MyCardCPSendSmsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TccSMSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TccSmsEplayOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTccTimeStampOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MyCardErrorLogOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MyCardMicroPaymentSendCoinfirmMailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetProdInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InputInvoiceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CheckCustIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CheckTempCodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CheckCPTempCodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAtmAccnoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAtmAccnoBillingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAtmAccnoForGOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAtmAccnoForEsunOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAtmAccnoForEsunBillingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GenCheckCodeForESunOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAtmAccnoForGfOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAtmAccnoForGfBillingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAtmAccnoForTSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAtmAccnoForTSBillingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAtmAccnoForLandOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GenCheckCodeForLandOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCardPriceForLandOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAtmAccnoForHuananOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GenCheckCodeForHuananOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CheckBlackIPOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MyCardBlackIpInsertOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MyCardBlackCustIdInsertOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MyCardBlackCustIdRemoveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateMyCardTradeInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMyCardSingleTradeInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMyCardSingleTradeInfoExOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MyCardSaveListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MyCardSaveListSaveCardTypeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MyCardTakeInvoiceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMyCardMultiTradeInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMyCardMultiTradeInfoExOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMyCardMultiTradeInfoEx2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMyCardMultiTradeInfo14OperationCompleted As System.Threading.SendOrPostCallback
        
        Private MyCard_CPCheckTempCodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MyCard_CPTradeListInsertOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MyCard_CPTradeListRenderOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MyCard_CPTradeListRenderForAtmOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCPBankFactoryPathOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCPFactoryReturnUrlOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MyCardCheckFFCcardOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MyCardChangeSohwCardStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MyCardCustIdAuthInsertOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MyCardCcardWhiteListInsertOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MyCardQuerySaveGameCardOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CheckBankProductSnOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MyCardGetAnnOperationCompleted As System.Threading.SendOrPostCallback
        
        Private QuestionInsertDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Md5OperationCompleted As System.Threading.SendOrPostCallback
        
        Private MyCardTradeQueryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private StorePoints_ErrorLog_InsertOperationCompleted As System.Threading.SendOrPostCallback
        
        Private atmtradeUpdateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAtmSnOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAtmSnBillingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAtmAccnoForFubonOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAtmAccnoForFubonBillingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAtmAccnoForPostWebAtmOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAtmAccnoForPostWebAtmBillingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCardPriceForShangHaiOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAtmAccnoForShangHaiOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.DebitReportService.My.MySettings.Default.DebitReportService_MyCardDbServices_DbWebService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetAtmAccnoForShangHaiBillingCompleted As GetAtmAccnoForShangHaiBillingCompletedEventHandler
        
        '''<remarks/>
        Public Event GenCheckCodeForShangHaiCompleted As GenCheckCodeForShangHaiCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCardPriceForAcqCompleted As GetCardPriceForAcqCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAtmAccnoForAcqCompleted As GetAtmAccnoForAcqCompletedEventHandler
        
        '''<remarks/>
        Public Event GenCheckCodeForAcqCompleted As GenCheckCodeForAcqCompletedEventHandler
        
        '''<remarks/>
        Public Event BillatmtradeUpdateCompleted As BillatmtradeUpdateCompletedEventHandler
        
        '''<remarks/>
        Public Event MyCardOnlinePaySellTradeListGetTradeCodeCompleted As MyCardOnlinePaySellTradeListGetTradeCodeCompletedEventHandler
        
        '''<remarks/>
        Public Event MyCardOnlinePaySellTradeListUpdateTradeCodeCompleted As MyCardOnlinePaySellTradeListUpdateTradeCodeCompletedEventHandler
        
        '''<remarks/>
        Public Event OnlinePay_SellTradeListInsert_USDCompleted As OnlinePay_SellTradeListInsert_USDCompletedEventHandler
        
        '''<remarks/>
        Public Event chkLimit_USDCompleted As chkLimit_USDCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFreecardMicroView1Completed As GetFreecardMicroView1CompletedEventHandler
        
        '''<remarks/>
        Public Event TextServiceCompleted As TextServiceCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCardNameForMyCardCompleted As GetCardNameForMyCardCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCardGameTypeForMyCardCompleted As GetCardGameTypeForMyCardCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBankFactoryGroupForMyCardCompleted As GetBankFactoryGroupForMyCardCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBankFactoryForMyCardCompleted As GetBankFactoryForMyCardCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBankFactoryPathCompleted As GetBankFactoryPathCompletedEventHandler
        
        '''<remarks/>
        Public Event GenMyCardErrorMsgCompleted As GenMyCardErrorMsgCompletedEventHandler
        
        '''<remarks/>
        Public Event ChkFreeCardCountCompleted As ChkFreeCardCountCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMicroPaymentSeqCompleted As GetMicroPaymentSeqCompletedEventHandler
        
        '''<remarks/>
        Public Event chkLimitCompleted As chkLimitCompletedEventHandler
        
        '''<remarks/>
        Public Event MicropaymentChkCcardRoleCompleted As MicropaymentChkCcardRoleCompletedEventHandler
        
        '''<remarks/>
        Public Event OnlinePay_SellTradeListInsertCompleted As OnlinePay_SellTradeListInsertCompletedEventHandler
        
        '''<remarks/>
        Public Event MicroSellTradeRenderCompleted As MicroSellTradeRenderCompletedEventHandler
        
        '''<remarks/>
        Public Event MicroSellTradeRender2Completed As MicroSellTradeRender2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetCardCompleted As GetCardCompletedEventHandler
        
        '''<remarks/>
        Public Event preCheckMyCardForCardStoreCompleted As preCheckMyCardForCardStoreCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCardPwdCompleted As GetCardPwdCompletedEventHandler
        
        '''<remarks/>
        Public Event FreecardSendSmsCompleted As FreecardSendSmsCompletedEventHandler
        
        '''<remarks/>
        Public Event MyCardSendSmsCompleted As MyCardSendSmsCompletedEventHandler
        
        '''<remarks/>
        Public Event MyCardCPSendSmsCompleted As MyCardCPSendSmsCompletedEventHandler
        
        '''<remarks/>
        Public Event TccSMSCompleted As TccSMSCompletedEventHandler
        
        '''<remarks/>
        Public Event TccSmsEplayCompleted As TccSmsEplayCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTccTimeStampCompleted As GetTccTimeStampCompletedEventHandler
        
        '''<remarks/>
        Public Event MyCardErrorLogCompleted As MyCardErrorLogCompletedEventHandler
        
        '''<remarks/>
        Public Event MyCardMicroPaymentSendCoinfirmMailCompleted As MyCardMicroPaymentSendCoinfirmMailCompletedEventHandler
        
        '''<remarks/>
        Public Event GetProdInfoCompleted As GetProdInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event InputInvoiceCompleted As InputInvoiceCompletedEventHandler
        
        '''<remarks/>
        Public Event CheckCustIdCompleted As CheckCustIdCompletedEventHandler
        
        '''<remarks/>
        Public Event CheckTempCodeCompleted As CheckTempCodeCompletedEventHandler
        
        '''<remarks/>
        Public Event CheckCPTempCodeCompleted As CheckCPTempCodeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAtmAccnoCompleted As GetAtmAccnoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAtmAccnoBillingCompleted As GetAtmAccnoBillingCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAtmAccnoForGCompleted As GetAtmAccnoForGCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAtmAccnoForEsunCompleted As GetAtmAccnoForEsunCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAtmAccnoForEsunBillingCompleted As GetAtmAccnoForEsunBillingCompletedEventHandler
        
        '''<remarks/>
        Public Event GenCheckCodeForESunCompleted As GenCheckCodeForESunCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAtmAccnoForGfCompleted As GetAtmAccnoForGfCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAtmAccnoForGfBillingCompleted As GetAtmAccnoForGfBillingCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAtmAccnoForTSCompleted As GetAtmAccnoForTSCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAtmAccnoForTSBillingCompleted As GetAtmAccnoForTSBillingCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAtmAccnoForLandCompleted As GetAtmAccnoForLandCompletedEventHandler
        
        '''<remarks/>
        Public Event GenCheckCodeForLandCompleted As GenCheckCodeForLandCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCardPriceForLandCompleted As GetCardPriceForLandCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAtmAccnoForHuananCompleted As GetAtmAccnoForHuananCompletedEventHandler
        
        '''<remarks/>
        Public Event GenCheckCodeForHuananCompleted As GenCheckCodeForHuananCompletedEventHandler
        
        '''<remarks/>
        Public Event CheckBlackIPCompleted As CheckBlackIPCompletedEventHandler
        
        '''<remarks/>
        Public Event MyCardBlackIpInsertCompleted As MyCardBlackIpInsertCompletedEventHandler
        
        '''<remarks/>
        Public Event MyCardBlackCustIdInsertCompleted As MyCardBlackCustIdInsertCompletedEventHandler
        
        '''<remarks/>
        Public Event MyCardBlackCustIdRemoveCompleted As MyCardBlackCustIdRemoveCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateMyCardTradeInfoCompleted As UpdateMyCardTradeInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMyCardSingleTradeInfoCompleted As GetMyCardSingleTradeInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMyCardSingleTradeInfoExCompleted As GetMyCardSingleTradeInfoExCompletedEventHandler
        
        '''<remarks/>
        Public Event MyCardSaveListCompleted As MyCardSaveListCompletedEventHandler
        
        '''<remarks/>
        Public Event MyCardSaveListSaveCardTypeCompleted As MyCardSaveListSaveCardTypeCompletedEventHandler
        
        '''<remarks/>
        Public Event MyCardTakeInvoiceCompleted As MyCardTakeInvoiceCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMyCardMultiTradeInfoCompleted As GetMyCardMultiTradeInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMyCardMultiTradeInfoExCompleted As GetMyCardMultiTradeInfoExCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMyCardMultiTradeInfoEx2Completed As GetMyCardMultiTradeInfoEx2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetMyCardMultiTradeInfo14Completed As GetMyCardMultiTradeInfo14CompletedEventHandler
        
        '''<remarks/>
        Public Event MyCard_CPCheckTempCodeCompleted As MyCard_CPCheckTempCodeCompletedEventHandler
        
        '''<remarks/>
        Public Event MyCard_CPTradeListInsertCompleted As MyCard_CPTradeListInsertCompletedEventHandler
        
        '''<remarks/>
        Public Event MyCard_CPTradeListRenderCompleted As MyCard_CPTradeListRenderCompletedEventHandler
        
        '''<remarks/>
        Public Event MyCard_CPTradeListRenderForAtmCompleted As MyCard_CPTradeListRenderForAtmCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCPBankFactoryPathCompleted As GetCPBankFactoryPathCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCPFactoryReturnUrlCompleted As GetCPFactoryReturnUrlCompletedEventHandler
        
        '''<remarks/>
        Public Event MyCardCheckFFCcardCompleted As MyCardCheckFFCcardCompletedEventHandler
        
        '''<remarks/>
        Public Event MyCardChangeSohwCardStatusCompleted As MyCardChangeSohwCardStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event MyCardCustIdAuthInsertCompleted As MyCardCustIdAuthInsertCompletedEventHandler
        
        '''<remarks/>
        Public Event MyCardCcardWhiteListInsertCompleted As MyCardCcardWhiteListInsertCompletedEventHandler
        
        '''<remarks/>
        Public Event MyCardQuerySaveGameCardCompleted As MyCardQuerySaveGameCardCompletedEventHandler
        
        '''<remarks/>
        Public Event CheckBankProductSnCompleted As CheckBankProductSnCompletedEventHandler
        
        '''<remarks/>
        Public Event MyCardGetAnnCompleted As MyCardGetAnnCompletedEventHandler
        
        '''<remarks/>
        Public Event QuestionInsertDataCompleted As QuestionInsertDataCompletedEventHandler
        
        '''<remarks/>
        Public Event Md5Completed As Md5CompletedEventHandler
        
        '''<remarks/>
        Public Event MyCardTradeQueryCompleted As MyCardTradeQueryCompletedEventHandler
        
        '''<remarks/>
        Public Event StorePoints_ErrorLog_InsertCompleted As StorePoints_ErrorLog_InsertCompletedEventHandler
        
        '''<remarks/>
        Public Event atmtradeUpdateCompleted As atmtradeUpdateCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAtmSnCompleted As GetAtmSnCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAtmSnBillingCompleted As GetAtmSnBillingCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAtmAccnoForFubonCompleted As GetAtmAccnoForFubonCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAtmAccnoForFubonBillingCompleted As GetAtmAccnoForFubonBillingCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAtmAccnoForPostWebAtmCompleted As GetAtmAccnoForPostWebAtmCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAtmAccnoForPostWebAtmBillingCompleted As GetAtmAccnoForPostWebAtmBillingCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCardPriceForShangHaiCompleted As GetCardPriceForShangHaiCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAtmAccnoForShangHaiCompleted As GetAtmAccnoForShangHaiCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAtmAccnoForShangHaiBilling", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAtmAccnoForShangHaiBilling(ByVal Classtype As Integer, ByVal Amount As Integer) As GetAtmAccnoResult
            Dim results() As Object = Me.Invoke("GetAtmAccnoForShangHaiBilling", New Object() {Classtype, Amount})
            Return CType(results(0),GetAtmAccnoResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAtmAccnoForShangHaiBillingAsync(ByVal Classtype As Integer, ByVal Amount As Integer)
            Me.GetAtmAccnoForShangHaiBillingAsync(Classtype, Amount, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAtmAccnoForShangHaiBillingAsync(ByVal Classtype As Integer, ByVal Amount As Integer, ByVal userState As Object)
            If (Me.GetAtmAccnoForShangHaiBillingOperationCompleted Is Nothing) Then
                Me.GetAtmAccnoForShangHaiBillingOperationCompleted = AddressOf Me.OnGetAtmAccnoForShangHaiBillingOperationCompleted
            End If
            Me.InvokeAsync("GetAtmAccnoForShangHaiBilling", New Object() {Classtype, Amount}, Me.GetAtmAccnoForShangHaiBillingOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAtmAccnoForShangHaiBillingOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAtmAccnoForShangHaiBillingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAtmAccnoForShangHaiBillingCompleted(Me, New GetAtmAccnoForShangHaiBillingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GenCheckCodeForShangHai", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GenCheckCodeForShangHai(ByVal TradeSeq As String, ByVal Price As String) As String
            Dim results() As Object = Me.Invoke("GenCheckCodeForShangHai", New Object() {TradeSeq, Price})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GenCheckCodeForShangHaiAsync(ByVal TradeSeq As String, ByVal Price As String)
            Me.GenCheckCodeForShangHaiAsync(TradeSeq, Price, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GenCheckCodeForShangHaiAsync(ByVal TradeSeq As String, ByVal Price As String, ByVal userState As Object)
            If (Me.GenCheckCodeForShangHaiOperationCompleted Is Nothing) Then
                Me.GenCheckCodeForShangHaiOperationCompleted = AddressOf Me.OnGenCheckCodeForShangHaiOperationCompleted
            End If
            Me.InvokeAsync("GenCheckCodeForShangHai", New Object() {TradeSeq, Price}, Me.GenCheckCodeForShangHaiOperationCompleted, userState)
        End Sub
        
        Private Sub OnGenCheckCodeForShangHaiOperationCompleted(ByVal arg As Object)
            If (Not (Me.GenCheckCodeForShangHaiCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GenCheckCodeForShangHaiCompleted(Me, New GenCheckCodeForShangHaiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCardPriceForAcq", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCardPriceForAcq(ByVal BankProductSn As String) As String
            Dim results() As Object = Me.Invoke("GetCardPriceForAcq", New Object() {BankProductSn})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCardPriceForAcqAsync(ByVal BankProductSn As String)
            Me.GetCardPriceForAcqAsync(BankProductSn, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCardPriceForAcqAsync(ByVal BankProductSn As String, ByVal userState As Object)
            If (Me.GetCardPriceForAcqOperationCompleted Is Nothing) Then
                Me.GetCardPriceForAcqOperationCompleted = AddressOf Me.OnGetCardPriceForAcqOperationCompleted
            End If
            Me.InvokeAsync("GetCardPriceForAcq", New Object() {BankProductSn}, Me.GetCardPriceForAcqOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCardPriceForAcqOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCardPriceForAcqCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCardPriceForAcqCompleted(Me, New GetCardPriceForAcqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAtmAccnoForAcq", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAtmAccnoForAcq(ByVal Classtype As Integer, ByVal Amount As Integer, ByVal Price As String) As GetAtmAccnoResult
            Dim results() As Object = Me.Invoke("GetAtmAccnoForAcq", New Object() {Classtype, Amount, Price})
            Return CType(results(0),GetAtmAccnoResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAtmAccnoForAcqAsync(ByVal Classtype As Integer, ByVal Amount As Integer, ByVal Price As String)
            Me.GetAtmAccnoForAcqAsync(Classtype, Amount, Price, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAtmAccnoForAcqAsync(ByVal Classtype As Integer, ByVal Amount As Integer, ByVal Price As String, ByVal userState As Object)
            If (Me.GetAtmAccnoForAcqOperationCompleted Is Nothing) Then
                Me.GetAtmAccnoForAcqOperationCompleted = AddressOf Me.OnGetAtmAccnoForAcqOperationCompleted
            End If
            Me.InvokeAsync("GetAtmAccnoForAcq", New Object() {Classtype, Amount, Price}, Me.GetAtmAccnoForAcqOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAtmAccnoForAcqOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAtmAccnoForAcqCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAtmAccnoForAcqCompleted(Me, New GetAtmAccnoForAcqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GenCheckCodeForAcq", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GenCheckCodeForAcq(ByVal TradeSeq As String, ByVal Price As String) As String
            Dim results() As Object = Me.Invoke("GenCheckCodeForAcq", New Object() {TradeSeq, Price})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GenCheckCodeForAcqAsync(ByVal TradeSeq As String, ByVal Price As String)
            Me.GenCheckCodeForAcqAsync(TradeSeq, Price, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GenCheckCodeForAcqAsync(ByVal TradeSeq As String, ByVal Price As String, ByVal userState As Object)
            If (Me.GenCheckCodeForAcqOperationCompleted Is Nothing) Then
                Me.GenCheckCodeForAcqOperationCompleted = AddressOf Me.OnGenCheckCodeForAcqOperationCompleted
            End If
            Me.InvokeAsync("GenCheckCodeForAcq", New Object() {TradeSeq, Price}, Me.GenCheckCodeForAcqOperationCompleted, userState)
        End Sub
        
        Private Sub OnGenCheckCodeForAcqOperationCompleted(ByVal arg As Object)
            If (Not (Me.GenCheckCodeForAcqCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GenCheckCodeForAcqCompleted(Me, New GenCheckCodeForAcqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BillatmtradeUpdate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BillatmtradeUpdate(ByVal AtmTradeSn As String, ByVal BankAccountNo As String) As BillatmtradeUpdateRE
            Dim results() As Object = Me.Invoke("BillatmtradeUpdate", New Object() {AtmTradeSn, BankAccountNo})
            Return CType(results(0),BillatmtradeUpdateRE)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BillatmtradeUpdateAsync(ByVal AtmTradeSn As String, ByVal BankAccountNo As String)
            Me.BillatmtradeUpdateAsync(AtmTradeSn, BankAccountNo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BillatmtradeUpdateAsync(ByVal AtmTradeSn As String, ByVal BankAccountNo As String, ByVal userState As Object)
            If (Me.BillatmtradeUpdateOperationCompleted Is Nothing) Then
                Me.BillatmtradeUpdateOperationCompleted = AddressOf Me.OnBillatmtradeUpdateOperationCompleted
            End If
            Me.InvokeAsync("BillatmtradeUpdate", New Object() {AtmTradeSn, BankAccountNo}, Me.BillatmtradeUpdateOperationCompleted, userState)
        End Sub
        
        Private Sub OnBillatmtradeUpdateOperationCompleted(ByVal arg As Object)
            If (Not (Me.BillatmtradeUpdateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BillatmtradeUpdateCompleted(Me, New BillatmtradeUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MyCardOnlinePaySellTradeListGetTradeCode", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MyCardOnlinePaySellTradeListGetTradeCode(ByVal SellTradeSn As String, ByVal TradeCode As String) As MyCardOnlinePaySellTradeListGetTradeCodeRE
            Dim results() As Object = Me.Invoke("MyCardOnlinePaySellTradeListGetTradeCode", New Object() {SellTradeSn, TradeCode})
            Return CType(results(0),MyCardOnlinePaySellTradeListGetTradeCodeRE)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MyCardOnlinePaySellTradeListGetTradeCodeAsync(ByVal SellTradeSn As String, ByVal TradeCode As String)
            Me.MyCardOnlinePaySellTradeListGetTradeCodeAsync(SellTradeSn, TradeCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MyCardOnlinePaySellTradeListGetTradeCodeAsync(ByVal SellTradeSn As String, ByVal TradeCode As String, ByVal userState As Object)
            If (Me.MyCardOnlinePaySellTradeListGetTradeCodeOperationCompleted Is Nothing) Then
                Me.MyCardOnlinePaySellTradeListGetTradeCodeOperationCompleted = AddressOf Me.OnMyCardOnlinePaySellTradeListGetTradeCodeOperationCompleted
            End If
            Me.InvokeAsync("MyCardOnlinePaySellTradeListGetTradeCode", New Object() {SellTradeSn, TradeCode}, Me.MyCardOnlinePaySellTradeListGetTradeCodeOperationCompleted, userState)
        End Sub
        
        Private Sub OnMyCardOnlinePaySellTradeListGetTradeCodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.MyCardOnlinePaySellTradeListGetTradeCodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MyCardOnlinePaySellTradeListGetTradeCodeCompleted(Me, New MyCardOnlinePaySellTradeListGetTradeCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MyCardOnlinePaySellTradeListUpdateTradeCode", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MyCardOnlinePaySellTradeListUpdateTradeCode(ByVal TradeSeq As String, ByVal TradeCode As String) As MyCardOnlinePaySellTradeListUpdateTradeCodeRE
            Dim results() As Object = Me.Invoke("MyCardOnlinePaySellTradeListUpdateTradeCode", New Object() {TradeSeq, TradeCode})
            Return CType(results(0),MyCardOnlinePaySellTradeListUpdateTradeCodeRE)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MyCardOnlinePaySellTradeListUpdateTradeCodeAsync(ByVal TradeSeq As String, ByVal TradeCode As String)
            Me.MyCardOnlinePaySellTradeListUpdateTradeCodeAsync(TradeSeq, TradeCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MyCardOnlinePaySellTradeListUpdateTradeCodeAsync(ByVal TradeSeq As String, ByVal TradeCode As String, ByVal userState As Object)
            If (Me.MyCardOnlinePaySellTradeListUpdateTradeCodeOperationCompleted Is Nothing) Then
                Me.MyCardOnlinePaySellTradeListUpdateTradeCodeOperationCompleted = AddressOf Me.OnMyCardOnlinePaySellTradeListUpdateTradeCodeOperationCompleted
            End If
            Me.InvokeAsync("MyCardOnlinePaySellTradeListUpdateTradeCode", New Object() {TradeSeq, TradeCode}, Me.MyCardOnlinePaySellTradeListUpdateTradeCodeOperationCompleted, userState)
        End Sub
        
        Private Sub OnMyCardOnlinePaySellTradeListUpdateTradeCodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.MyCardOnlinePaySellTradeListUpdateTradeCodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MyCardOnlinePaySellTradeListUpdateTradeCodeCompleted(Me, New MyCardOnlinePaySellTradeListUpdateTradeCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OnlinePay_SellTradeListInsert_USD", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function OnlinePay_SellTradeListInsert_USD(ByVal MyCardProductSn As Integer, ByVal MyCardSeqName As String, ByVal BuyCustId As String, ByVal BuyGameId As String, ByVal BuyGameCardType As Integer, ByVal BuyCustEmail As String, ByVal BuyCustMobile As String, ByVal BuyCustIp As String) As SellTradeResult
            Dim results() As Object = Me.Invoke("OnlinePay_SellTradeListInsert_USD", New Object() {MyCardProductSn, MyCardSeqName, BuyCustId, BuyGameId, BuyGameCardType, BuyCustEmail, BuyCustMobile, BuyCustIp})
            Return CType(results(0),SellTradeResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub OnlinePay_SellTradeListInsert_USDAsync(ByVal MyCardProductSn As Integer, ByVal MyCardSeqName As String, ByVal BuyCustId As String, ByVal BuyGameId As String, ByVal BuyGameCardType As Integer, ByVal BuyCustEmail As String, ByVal BuyCustMobile As String, ByVal BuyCustIp As String)
            Me.OnlinePay_SellTradeListInsert_USDAsync(MyCardProductSn, MyCardSeqName, BuyCustId, BuyGameId, BuyGameCardType, BuyCustEmail, BuyCustMobile, BuyCustIp, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OnlinePay_SellTradeListInsert_USDAsync(ByVal MyCardProductSn As Integer, ByVal MyCardSeqName As String, ByVal BuyCustId As String, ByVal BuyGameId As String, ByVal BuyGameCardType As Integer, ByVal BuyCustEmail As String, ByVal BuyCustMobile As String, ByVal BuyCustIp As String, ByVal userState As Object)
            If (Me.OnlinePay_SellTradeListInsert_USDOperationCompleted Is Nothing) Then
                Me.OnlinePay_SellTradeListInsert_USDOperationCompleted = AddressOf Me.OnOnlinePay_SellTradeListInsert_USDOperationCompleted
            End If
            Me.InvokeAsync("OnlinePay_SellTradeListInsert_USD", New Object() {MyCardProductSn, MyCardSeqName, BuyCustId, BuyGameId, BuyGameCardType, BuyCustEmail, BuyCustMobile, BuyCustIp}, Me.OnlinePay_SellTradeListInsert_USDOperationCompleted, userState)
        End Sub
        
        Private Sub OnOnlinePay_SellTradeListInsert_USDOperationCompleted(ByVal arg As Object)
            If (Not (Me.OnlinePay_SellTradeListInsert_USDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OnlinePay_SellTradeListInsert_USDCompleted(Me, New OnlinePay_SellTradeListInsert_USDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/chkLimit_USD", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function chkLimit_USD(ByVal CustId As String, ByVal Reality As Integer, ByVal upnm As Integer, ByVal CheckType As Integer) As Integer
            Dim results() As Object = Me.Invoke("chkLimit_USD", New Object() {CustId, Reality, upnm, CheckType})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub chkLimit_USDAsync(ByVal CustId As String, ByVal Reality As Integer, ByVal upnm As Integer, ByVal CheckType As Integer)
            Me.chkLimit_USDAsync(CustId, Reality, upnm, CheckType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub chkLimit_USDAsync(ByVal CustId As String, ByVal Reality As Integer, ByVal upnm As Integer, ByVal CheckType As Integer, ByVal userState As Object)
            If (Me.chkLimit_USDOperationCompleted Is Nothing) Then
                Me.chkLimit_USDOperationCompleted = AddressOf Me.OnchkLimit_USDOperationCompleted
            End If
            Me.InvokeAsync("chkLimit_USD", New Object() {CustId, Reality, upnm, CheckType}, Me.chkLimit_USDOperationCompleted, userState)
        End Sub
        
        Private Sub OnchkLimit_USDOperationCompleted(ByVal arg As Object)
            If (Not (Me.chkLimit_USDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent chkLimit_USDCompleted(Me, New chkLimit_USDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFreecardMicroView1", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFreecardMicroView1(ByVal trade_seq As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetFreecardMicroView1", New Object() {trade_seq})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFreecardMicroView1Async(ByVal trade_seq As String)
            Me.GetFreecardMicroView1Async(trade_seq, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFreecardMicroView1Async(ByVal trade_seq As String, ByVal userState As Object)
            If (Me.GetFreecardMicroView1OperationCompleted Is Nothing) Then
                Me.GetFreecardMicroView1OperationCompleted = AddressOf Me.OnGetFreecardMicroView1OperationCompleted
            End If
            Me.InvokeAsync("GetFreecardMicroView1", New Object() {trade_seq}, Me.GetFreecardMicroView1OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFreecardMicroView1OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFreecardMicroView1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFreecardMicroView1Completed(Me, New GetFreecardMicroView1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TextService", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TextService(ByVal index As Integer, ByVal textContent As String, ByVal PhoneNo As String) As basicResult
            Dim results() As Object = Me.Invoke("TextService", New Object() {index, textContent, PhoneNo})
            Return CType(results(0),basicResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TextServiceAsync(ByVal index As Integer, ByVal textContent As String, ByVal PhoneNo As String)
            Me.TextServiceAsync(index, textContent, PhoneNo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TextServiceAsync(ByVal index As Integer, ByVal textContent As String, ByVal PhoneNo As String, ByVal userState As Object)
            If (Me.TextServiceOperationCompleted Is Nothing) Then
                Me.TextServiceOperationCompleted = AddressOf Me.OnTextServiceOperationCompleted
            End If
            Me.InvokeAsync("TextService", New Object() {index, textContent, PhoneNo}, Me.TextServiceOperationCompleted, userState)
        End Sub
        
        Private Sub OnTextServiceOperationCompleted(ByVal arg As Object)
            If (Not (Me.TextServiceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TextServiceCompleted(Me, New TextServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCardNameForMyCard", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCardNameForMyCard(ByVal knownCategoryValues As String, ByVal category As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetCardNameForMyCard", New Object() {knownCategoryValues, category})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCardNameForMyCardAsync(ByVal knownCategoryValues As String, ByVal category As String)
            Me.GetCardNameForMyCardAsync(knownCategoryValues, category, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCardNameForMyCardAsync(ByVal knownCategoryValues As String, ByVal category As String, ByVal userState As Object)
            If (Me.GetCardNameForMyCardOperationCompleted Is Nothing) Then
                Me.GetCardNameForMyCardOperationCompleted = AddressOf Me.OnGetCardNameForMyCardOperationCompleted
            End If
            Me.InvokeAsync("GetCardNameForMyCard", New Object() {knownCategoryValues, category}, Me.GetCardNameForMyCardOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCardNameForMyCardOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCardNameForMyCardCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCardNameForMyCardCompleted(Me, New GetCardNameForMyCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCardGameTypeForMyCard", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCardGameTypeForMyCard(ByVal knownCategoryValues As String, ByVal category As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetCardGameTypeForMyCard", New Object() {knownCategoryValues, category})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCardGameTypeForMyCardAsync(ByVal knownCategoryValues As String, ByVal category As String)
            Me.GetCardGameTypeForMyCardAsync(knownCategoryValues, category, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCardGameTypeForMyCardAsync(ByVal knownCategoryValues As String, ByVal category As String, ByVal userState As Object)
            If (Me.GetCardGameTypeForMyCardOperationCompleted Is Nothing) Then
                Me.GetCardGameTypeForMyCardOperationCompleted = AddressOf Me.OnGetCardGameTypeForMyCardOperationCompleted
            End If
            Me.InvokeAsync("GetCardGameTypeForMyCard", New Object() {knownCategoryValues, category}, Me.GetCardGameTypeForMyCardOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCardGameTypeForMyCardOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCardGameTypeForMyCardCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCardGameTypeForMyCardCompleted(Me, New GetCardGameTypeForMyCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBankFactoryGroupForMyCard", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBankFactoryGroupForMyCard(ByVal knownCategoryValues As String, ByVal category As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetBankFactoryGroupForMyCard", New Object() {knownCategoryValues, category})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBankFactoryGroupForMyCardAsync(ByVal knownCategoryValues As String, ByVal category As String)
            Me.GetBankFactoryGroupForMyCardAsync(knownCategoryValues, category, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBankFactoryGroupForMyCardAsync(ByVal knownCategoryValues As String, ByVal category As String, ByVal userState As Object)
            If (Me.GetBankFactoryGroupForMyCardOperationCompleted Is Nothing) Then
                Me.GetBankFactoryGroupForMyCardOperationCompleted = AddressOf Me.OnGetBankFactoryGroupForMyCardOperationCompleted
            End If
            Me.InvokeAsync("GetBankFactoryGroupForMyCard", New Object() {knownCategoryValues, category}, Me.GetBankFactoryGroupForMyCardOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBankFactoryGroupForMyCardOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBankFactoryGroupForMyCardCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBankFactoryGroupForMyCardCompleted(Me, New GetBankFactoryGroupForMyCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBankFactoryForMyCard", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBankFactoryForMyCard(ByVal knownCategoryValues As String, ByVal category As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetBankFactoryForMyCard", New Object() {knownCategoryValues, category})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBankFactoryForMyCardAsync(ByVal knownCategoryValues As String, ByVal category As String)
            Me.GetBankFactoryForMyCardAsync(knownCategoryValues, category, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBankFactoryForMyCardAsync(ByVal knownCategoryValues As String, ByVal category As String, ByVal userState As Object)
            If (Me.GetBankFactoryForMyCardOperationCompleted Is Nothing) Then
                Me.GetBankFactoryForMyCardOperationCompleted = AddressOf Me.OnGetBankFactoryForMyCardOperationCompleted
            End If
            Me.InvokeAsync("GetBankFactoryForMyCard", New Object() {knownCategoryValues, category}, Me.GetBankFactoryForMyCardOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBankFactoryForMyCardOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBankFactoryForMyCardCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBankFactoryForMyCardCompleted(Me, New GetBankFactoryForMyCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBankFactoryPath", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBankFactoryPath(ByVal BankFactorySn As Integer) As String
            Dim results() As Object = Me.Invoke("GetBankFactoryPath", New Object() {BankFactorySn})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBankFactoryPathAsync(ByVal BankFactorySn As Integer)
            Me.GetBankFactoryPathAsync(BankFactorySn, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBankFactoryPathAsync(ByVal BankFactorySn As Integer, ByVal userState As Object)
            If (Me.GetBankFactoryPathOperationCompleted Is Nothing) Then
                Me.GetBankFactoryPathOperationCompleted = AddressOf Me.OnGetBankFactoryPathOperationCompleted
            End If
            Me.InvokeAsync("GetBankFactoryPath", New Object() {BankFactorySn}, Me.GetBankFactoryPathOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBankFactoryPathOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBankFactoryPathCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBankFactoryPathCompleted(Me, New GetBankFactoryPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GenMyCardErrorMsg", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GenMyCardErrorMsg(ByVal ErrorMsg As String) As String
            Dim results() As Object = Me.Invoke("GenMyCardErrorMsg", New Object() {ErrorMsg})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GenMyCardErrorMsgAsync(ByVal ErrorMsg As String)
            Me.GenMyCardErrorMsgAsync(ErrorMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GenMyCardErrorMsgAsync(ByVal ErrorMsg As String, ByVal userState As Object)
            If (Me.GenMyCardErrorMsgOperationCompleted Is Nothing) Then
                Me.GenMyCardErrorMsgOperationCompleted = AddressOf Me.OnGenMyCardErrorMsgOperationCompleted
            End If
            Me.InvokeAsync("GenMyCardErrorMsg", New Object() {ErrorMsg}, Me.GenMyCardErrorMsgOperationCompleted, userState)
        End Sub
        
        Private Sub OnGenMyCardErrorMsgOperationCompleted(ByVal arg As Object)
            If (Not (Me.GenMyCardErrorMsgCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GenMyCardErrorMsgCompleted(Me, New GenMyCardErrorMsgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChkFreeCardCount", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ChkFreeCardCount(ByVal Game_ID As String, ByVal Card_Type As String) As Integer
            Dim results() As Object = Me.Invoke("ChkFreeCardCount", New Object() {Game_ID, Card_Type})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ChkFreeCardCountAsync(ByVal Game_ID As String, ByVal Card_Type As String)
            Me.ChkFreeCardCountAsync(Game_ID, Card_Type, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ChkFreeCardCountAsync(ByVal Game_ID As String, ByVal Card_Type As String, ByVal userState As Object)
            If (Me.ChkFreeCardCountOperationCompleted Is Nothing) Then
                Me.ChkFreeCardCountOperationCompleted = AddressOf Me.OnChkFreeCardCountOperationCompleted
            End If
            Me.InvokeAsync("ChkFreeCardCount", New Object() {Game_ID, Card_Type}, Me.ChkFreeCardCountOperationCompleted, userState)
        End Sub
        
        Private Sub OnChkFreeCardCountOperationCompleted(ByVal arg As Object)
            If (Not (Me.ChkFreeCardCountCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ChkFreeCardCountCompleted(Me, New ChkFreeCardCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMicroPaymentSeq", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMicroPaymentSeq(ByVal SeqName As String) As String
            Dim results() As Object = Me.Invoke("GetMicroPaymentSeq", New Object() {SeqName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMicroPaymentSeqAsync(ByVal SeqName As String)
            Me.GetMicroPaymentSeqAsync(SeqName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMicroPaymentSeqAsync(ByVal SeqName As String, ByVal userState As Object)
            If (Me.GetMicroPaymentSeqOperationCompleted Is Nothing) Then
                Me.GetMicroPaymentSeqOperationCompleted = AddressOf Me.OnGetMicroPaymentSeqOperationCompleted
            End If
            Me.InvokeAsync("GetMicroPaymentSeq", New Object() {SeqName}, Me.GetMicroPaymentSeqOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMicroPaymentSeqOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMicroPaymentSeqCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMicroPaymentSeqCompleted(Me, New GetMicroPaymentSeqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/chkLimit", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function chkLimit(ByVal CustId As String, ByVal Reality As Integer, ByVal upnm As Integer, ByVal CheckType As Integer) As Integer
            Dim results() As Object = Me.Invoke("chkLimit", New Object() {CustId, Reality, upnm, CheckType})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub chkLimitAsync(ByVal CustId As String, ByVal Reality As Integer, ByVal upnm As Integer, ByVal CheckType As Integer)
            Me.chkLimitAsync(CustId, Reality, upnm, CheckType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub chkLimitAsync(ByVal CustId As String, ByVal Reality As Integer, ByVal upnm As Integer, ByVal CheckType As Integer, ByVal userState As Object)
            If (Me.chkLimitOperationCompleted Is Nothing) Then
                Me.chkLimitOperationCompleted = AddressOf Me.OnchkLimitOperationCompleted
            End If
            Me.InvokeAsync("chkLimit", New Object() {CustId, Reality, upnm, CheckType}, Me.chkLimitOperationCompleted, userState)
        End Sub
        
        Private Sub OnchkLimitOperationCompleted(ByVal arg As Object)
            If (Not (Me.chkLimitCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent chkLimitCompleted(Me, New chkLimitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MicropaymentChkCcardRole", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MicropaymentChkCcardRole(ByVal CardNum As String) As Integer
            Dim results() As Object = Me.Invoke("MicropaymentChkCcardRole", New Object() {CardNum})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MicropaymentChkCcardRoleAsync(ByVal CardNum As String)
            Me.MicropaymentChkCcardRoleAsync(CardNum, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MicropaymentChkCcardRoleAsync(ByVal CardNum As String, ByVal userState As Object)
            If (Me.MicropaymentChkCcardRoleOperationCompleted Is Nothing) Then
                Me.MicropaymentChkCcardRoleOperationCompleted = AddressOf Me.OnMicropaymentChkCcardRoleOperationCompleted
            End If
            Me.InvokeAsync("MicropaymentChkCcardRole", New Object() {CardNum}, Me.MicropaymentChkCcardRoleOperationCompleted, userState)
        End Sub
        
        Private Sub OnMicropaymentChkCcardRoleOperationCompleted(ByVal arg As Object)
            If (Not (Me.MicropaymentChkCcardRoleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MicropaymentChkCcardRoleCompleted(Me, New MicropaymentChkCcardRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OnlinePay_SellTradeListInsert", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function OnlinePay_SellTradeListInsert(ByVal MyCardProductSn As Integer, ByVal MyCardSeqName As String, ByVal BuyCustId As String, ByVal BuyGameId As String, ByVal BuyGameCardType As Integer, ByVal BuyCustEmail As String, ByVal BuyCustMobile As String, ByVal BuyCustIp As String) As SellTradeResult
            Dim results() As Object = Me.Invoke("OnlinePay_SellTradeListInsert", New Object() {MyCardProductSn, MyCardSeqName, BuyCustId, BuyGameId, BuyGameCardType, BuyCustEmail, BuyCustMobile, BuyCustIp})
            Return CType(results(0),SellTradeResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub OnlinePay_SellTradeListInsertAsync(ByVal MyCardProductSn As Integer, ByVal MyCardSeqName As String, ByVal BuyCustId As String, ByVal BuyGameId As String, ByVal BuyGameCardType As Integer, ByVal BuyCustEmail As String, ByVal BuyCustMobile As String, ByVal BuyCustIp As String)
            Me.OnlinePay_SellTradeListInsertAsync(MyCardProductSn, MyCardSeqName, BuyCustId, BuyGameId, BuyGameCardType, BuyCustEmail, BuyCustMobile, BuyCustIp, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OnlinePay_SellTradeListInsertAsync(ByVal MyCardProductSn As Integer, ByVal MyCardSeqName As String, ByVal BuyCustId As String, ByVal BuyGameId As String, ByVal BuyGameCardType As Integer, ByVal BuyCustEmail As String, ByVal BuyCustMobile As String, ByVal BuyCustIp As String, ByVal userState As Object)
            If (Me.OnlinePay_SellTradeListInsertOperationCompleted Is Nothing) Then
                Me.OnlinePay_SellTradeListInsertOperationCompleted = AddressOf Me.OnOnlinePay_SellTradeListInsertOperationCompleted
            End If
            Me.InvokeAsync("OnlinePay_SellTradeListInsert", New Object() {MyCardProductSn, MyCardSeqName, BuyCustId, BuyGameId, BuyGameCardType, BuyCustEmail, BuyCustMobile, BuyCustIp}, Me.OnlinePay_SellTradeListInsertOperationCompleted, userState)
        End Sub
        
        Private Sub OnOnlinePay_SellTradeListInsertOperationCompleted(ByVal arg As Object)
            If (Not (Me.OnlinePay_SellTradeListInsertCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OnlinePay_SellTradeListInsertCompleted(Me, New OnlinePay_SellTradeListInsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MicroSellTradeRender", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MicroSellTradeRender(ByVal SellTradeSn As Integer, ByVal CardSn As String, ByVal CustId As String, ByVal TradeCode As String, ByVal TempCode As String) As Integer
            Dim results() As Object = Me.Invoke("MicroSellTradeRender", New Object() {SellTradeSn, CardSn, CustId, TradeCode, TempCode})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MicroSellTradeRenderAsync(ByVal SellTradeSn As Integer, ByVal CardSn As String, ByVal CustId As String, ByVal TradeCode As String, ByVal TempCode As String)
            Me.MicroSellTradeRenderAsync(SellTradeSn, CardSn, CustId, TradeCode, TempCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MicroSellTradeRenderAsync(ByVal SellTradeSn As Integer, ByVal CardSn As String, ByVal CustId As String, ByVal TradeCode As String, ByVal TempCode As String, ByVal userState As Object)
            If (Me.MicroSellTradeRenderOperationCompleted Is Nothing) Then
                Me.MicroSellTradeRenderOperationCompleted = AddressOf Me.OnMicroSellTradeRenderOperationCompleted
            End If
            Me.InvokeAsync("MicroSellTradeRender", New Object() {SellTradeSn, CardSn, CustId, TradeCode, TempCode}, Me.MicroSellTradeRenderOperationCompleted, userState)
        End Sub
        
        Private Sub OnMicroSellTradeRenderOperationCompleted(ByVal arg As Object)
            If (Not (Me.MicroSellTradeRenderCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MicroSellTradeRenderCompleted(Me, New MicroSellTradeRenderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MicroSellTradeRender2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MicroSellTradeRender2(ByVal SellTradeSn As Integer, ByVal CardSn As String, ByVal CustId As String, ByVal TradeCode As String, ByVal TempCode As String) As Integer
            Dim results() As Object = Me.Invoke("MicroSellTradeRender2", New Object() {SellTradeSn, CardSn, CustId, TradeCode, TempCode})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MicroSellTradeRender2Async(ByVal SellTradeSn As Integer, ByVal CardSn As String, ByVal CustId As String, ByVal TradeCode As String, ByVal TempCode As String)
            Me.MicroSellTradeRender2Async(SellTradeSn, CardSn, CustId, TradeCode, TempCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MicroSellTradeRender2Async(ByVal SellTradeSn As Integer, ByVal CardSn As String, ByVal CustId As String, ByVal TradeCode As String, ByVal TempCode As String, ByVal userState As Object)
            If (Me.MicroSellTradeRender2OperationCompleted Is Nothing) Then
                Me.MicroSellTradeRender2OperationCompleted = AddressOf Me.OnMicroSellTradeRender2OperationCompleted
            End If
            Me.InvokeAsync("MicroSellTradeRender2", New Object() {SellTradeSn, CardSn, CustId, TradeCode, TempCode}, Me.MicroSellTradeRender2OperationCompleted, userState)
        End Sub
        
        Private Sub OnMicroSellTradeRender2OperationCompleted(ByVal arg As Object)
            If (Not (Me.MicroSellTradeRender2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MicroSellTradeRender2Completed(Me, New MicroSellTradeRender2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCard", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCard(ByVal TradeSeq As String, ByVal CardType As String) As GetCardResult
            Dim results() As Object = Me.Invoke("GetCard", New Object() {TradeSeq, CardType})
            Return CType(results(0),GetCardResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCardAsync(ByVal TradeSeq As String, ByVal CardType As String)
            Me.GetCardAsync(TradeSeq, CardType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCardAsync(ByVal TradeSeq As String, ByVal CardType As String, ByVal userState As Object)
            If (Me.GetCardOperationCompleted Is Nothing) Then
                Me.GetCardOperationCompleted = AddressOf Me.OnGetCardOperationCompleted
            End If
            Me.InvokeAsync("GetCard", New Object() {TradeSeq, CardType}, Me.GetCardOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCardOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCardCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCardCompleted(Me, New GetCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/preCheckMyCardForCardStore", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function preCheckMyCardForCardStore(ByVal MyCardId As String, ByVal MyCardPwd As String) As CheckCardResult
            Dim results() As Object = Me.Invoke("preCheckMyCardForCardStore", New Object() {MyCardId, MyCardPwd})
            Return CType(results(0),CheckCardResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub preCheckMyCardForCardStoreAsync(ByVal MyCardId As String, ByVal MyCardPwd As String)
            Me.preCheckMyCardForCardStoreAsync(MyCardId, MyCardPwd, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub preCheckMyCardForCardStoreAsync(ByVal MyCardId As String, ByVal MyCardPwd As String, ByVal userState As Object)
            If (Me.preCheckMyCardForCardStoreOperationCompleted Is Nothing) Then
                Me.preCheckMyCardForCardStoreOperationCompleted = AddressOf Me.OnpreCheckMyCardForCardStoreOperationCompleted
            End If
            Me.InvokeAsync("preCheckMyCardForCardStore", New Object() {MyCardId, MyCardPwd}, Me.preCheckMyCardForCardStoreOperationCompleted, userState)
        End Sub
        
        Private Sub OnpreCheckMyCardForCardStoreOperationCompleted(ByVal arg As Object)
            If (Not (Me.preCheckMyCardForCardStoreCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent preCheckMyCardForCardStoreCompleted(Me, New preCheckMyCardForCardStoreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCardPwd", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCardPwd(ByVal CardId As String, ByVal TradeSeq As String) As String
            Dim results() As Object = Me.Invoke("GetCardPwd", New Object() {CardId, TradeSeq})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCardPwdAsync(ByVal CardId As String, ByVal TradeSeq As String)
            Me.GetCardPwdAsync(CardId, TradeSeq, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCardPwdAsync(ByVal CardId As String, ByVal TradeSeq As String, ByVal userState As Object)
            If (Me.GetCardPwdOperationCompleted Is Nothing) Then
                Me.GetCardPwdOperationCompleted = AddressOf Me.OnGetCardPwdOperationCompleted
            End If
            Me.InvokeAsync("GetCardPwd", New Object() {CardId, TradeSeq}, Me.GetCardPwdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCardPwdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCardPwdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCardPwdCompleted(Me, New GetCardPwdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FreecardSendSms", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FreecardSendSms(ByVal TradeSeq As String, ByVal SelltradeListSn As Integer, ByVal TradeCode As String) As FreecardSendSmsResult
            Dim results() As Object = Me.Invoke("FreecardSendSms", New Object() {TradeSeq, SelltradeListSn, TradeCode})
            Return CType(results(0),FreecardSendSmsResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FreecardSendSmsAsync(ByVal TradeSeq As String, ByVal SelltradeListSn As Integer, ByVal TradeCode As String)
            Me.FreecardSendSmsAsync(TradeSeq, SelltradeListSn, TradeCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FreecardSendSmsAsync(ByVal TradeSeq As String, ByVal SelltradeListSn As Integer, ByVal TradeCode As String, ByVal userState As Object)
            If (Me.FreecardSendSmsOperationCompleted Is Nothing) Then
                Me.FreecardSendSmsOperationCompleted = AddressOf Me.OnFreecardSendSmsOperationCompleted
            End If
            Me.InvokeAsync("FreecardSendSms", New Object() {TradeSeq, SelltradeListSn, TradeCode}, Me.FreecardSendSmsOperationCompleted, userState)
        End Sub
        
        Private Sub OnFreecardSendSmsOperationCompleted(ByVal arg As Object)
            If (Not (Me.FreecardSendSmsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FreecardSendSmsCompleted(Me, New FreecardSendSmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MyCardSendSms", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MyCardSendSms(ByVal TradeSeq As String) As MyCardSendSmsResult
            Dim results() As Object = Me.Invoke("MyCardSendSms", New Object() {TradeSeq})
            Return CType(results(0),MyCardSendSmsResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MyCardSendSmsAsync(ByVal TradeSeq As String)
            Me.MyCardSendSmsAsync(TradeSeq, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MyCardSendSmsAsync(ByVal TradeSeq As String, ByVal userState As Object)
            If (Me.MyCardSendSmsOperationCompleted Is Nothing) Then
                Me.MyCardSendSmsOperationCompleted = AddressOf Me.OnMyCardSendSmsOperationCompleted
            End If
            Me.InvokeAsync("MyCardSendSms", New Object() {TradeSeq}, Me.MyCardSendSmsOperationCompleted, userState)
        End Sub
        
        Private Sub OnMyCardSendSmsOperationCompleted(ByVal arg As Object)
            If (Not (Me.MyCardSendSmsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MyCardSendSmsCompleted(Me, New MyCardSendSmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MyCardCPSendSms", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MyCardCPSendSms(ByVal TradeSeq As String, ByVal SelltradeListSn As Integer, ByVal TradeCode As String) As FreecardSendSmsResult
            Dim results() As Object = Me.Invoke("MyCardCPSendSms", New Object() {TradeSeq, SelltradeListSn, TradeCode})
            Return CType(results(0),FreecardSendSmsResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MyCardCPSendSmsAsync(ByVal TradeSeq As String, ByVal SelltradeListSn As Integer, ByVal TradeCode As String)
            Me.MyCardCPSendSmsAsync(TradeSeq, SelltradeListSn, TradeCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MyCardCPSendSmsAsync(ByVal TradeSeq As String, ByVal SelltradeListSn As Integer, ByVal TradeCode As String, ByVal userState As Object)
            If (Me.MyCardCPSendSmsOperationCompleted Is Nothing) Then
                Me.MyCardCPSendSmsOperationCompleted = AddressOf Me.OnMyCardCPSendSmsOperationCompleted
            End If
            Me.InvokeAsync("MyCardCPSendSms", New Object() {TradeSeq, SelltradeListSn, TradeCode}, Me.MyCardCPSendSmsOperationCompleted, userState)
        End Sub
        
        Private Sub OnMyCardCPSendSmsOperationCompleted(ByVal arg As Object)
            If (Not (Me.MyCardCPSendSmsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MyCardCPSendSmsCompleted(Me, New MyCardCPSendSmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TccSMS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TccSMS(ByVal PhoneNum As String, ByVal Message As String) As Boolean
            Dim results() As Object = Me.Invoke("TccSMS", New Object() {PhoneNum, Message})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TccSMSAsync(ByVal PhoneNum As String, ByVal Message As String)
            Me.TccSMSAsync(PhoneNum, Message, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TccSMSAsync(ByVal PhoneNum As String, ByVal Message As String, ByVal userState As Object)
            If (Me.TccSMSOperationCompleted Is Nothing) Then
                Me.TccSMSOperationCompleted = AddressOf Me.OnTccSMSOperationCompleted
            End If
            Me.InvokeAsync("TccSMS", New Object() {PhoneNum, Message}, Me.TccSMSOperationCompleted, userState)
        End Sub
        
        Private Sub OnTccSMSOperationCompleted(ByVal arg As Object)
            If (Not (Me.TccSMSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TccSMSCompleted(Me, New TccSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TccSmsEplay", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TccSmsEplay(ByVal PhoneNum As String, ByVal Message As String) As Boolean
            Dim results() As Object = Me.Invoke("TccSmsEplay", New Object() {PhoneNum, Message})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TccSmsEplayAsync(ByVal PhoneNum As String, ByVal Message As String)
            Me.TccSmsEplayAsync(PhoneNum, Message, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TccSmsEplayAsync(ByVal PhoneNum As String, ByVal Message As String, ByVal userState As Object)
            If (Me.TccSmsEplayOperationCompleted Is Nothing) Then
                Me.TccSmsEplayOperationCompleted = AddressOf Me.OnTccSmsEplayOperationCompleted
            End If
            Me.InvokeAsync("TccSmsEplay", New Object() {PhoneNum, Message}, Me.TccSmsEplayOperationCompleted, userState)
        End Sub
        
        Private Sub OnTccSmsEplayOperationCompleted(ByVal arg As Object)
            If (Not (Me.TccSmsEplayCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TccSmsEplayCompleted(Me, New TccSmsEplayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTccTimeStamp", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTccTimeStamp() As String
            Dim results() As Object = Me.Invoke("GetTccTimeStamp", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTccTimeStampAsync()
            Me.GetTccTimeStampAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTccTimeStampAsync(ByVal userState As Object)
            If (Me.GetTccTimeStampOperationCompleted Is Nothing) Then
                Me.GetTccTimeStampOperationCompleted = AddressOf Me.OnGetTccTimeStampOperationCompleted
            End If
            Me.InvokeAsync("GetTccTimeStamp", New Object(-1) {}, Me.GetTccTimeStampOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTccTimeStampOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTccTimeStampCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTccTimeStampCompleted(Me, New GetTccTimeStampCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MyCardErrorLog", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub MyCardErrorLog(ByVal ErrorPage As String, ByVal ErrorMsg As String, ByVal CreateIp As String)
            Me.Invoke("MyCardErrorLog", New Object() {ErrorPage, ErrorMsg, CreateIp})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MyCardErrorLogAsync(ByVal ErrorPage As String, ByVal ErrorMsg As String, ByVal CreateIp As String)
            Me.MyCardErrorLogAsync(ErrorPage, ErrorMsg, CreateIp, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MyCardErrorLogAsync(ByVal ErrorPage As String, ByVal ErrorMsg As String, ByVal CreateIp As String, ByVal userState As Object)
            If (Me.MyCardErrorLogOperationCompleted Is Nothing) Then
                Me.MyCardErrorLogOperationCompleted = AddressOf Me.OnMyCardErrorLogOperationCompleted
            End If
            Me.InvokeAsync("MyCardErrorLog", New Object() {ErrorPage, ErrorMsg, CreateIp}, Me.MyCardErrorLogOperationCompleted, userState)
        End Sub
        
        Private Sub OnMyCardErrorLogOperationCompleted(ByVal arg As Object)
            If (Not (Me.MyCardErrorLogCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MyCardErrorLogCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MyCardMicroPaymentSendCoinfirmMail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub MyCardMicroPaymentSendCoinfirmMail(ByVal SeqNo As String, ByVal UserEMail As String, ByVal TempCode As String)
            Me.Invoke("MyCardMicroPaymentSendCoinfirmMail", New Object() {SeqNo, UserEMail, TempCode})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MyCardMicroPaymentSendCoinfirmMailAsync(ByVal SeqNo As String, ByVal UserEMail As String, ByVal TempCode As String)
            Me.MyCardMicroPaymentSendCoinfirmMailAsync(SeqNo, UserEMail, TempCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MyCardMicroPaymentSendCoinfirmMailAsync(ByVal SeqNo As String, ByVal UserEMail As String, ByVal TempCode As String, ByVal userState As Object)
            If (Me.MyCardMicroPaymentSendCoinfirmMailOperationCompleted Is Nothing) Then
                Me.MyCardMicroPaymentSendCoinfirmMailOperationCompleted = AddressOf Me.OnMyCardMicroPaymentSendCoinfirmMailOperationCompleted
            End If
            Me.InvokeAsync("MyCardMicroPaymentSendCoinfirmMail", New Object() {SeqNo, UserEMail, TempCode}, Me.MyCardMicroPaymentSendCoinfirmMailOperationCompleted, userState)
        End Sub
        
        Private Sub OnMyCardMicroPaymentSendCoinfirmMailOperationCompleted(ByVal arg As Object)
            If (Not (Me.MyCardMicroPaymentSendCoinfirmMailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MyCardMicroPaymentSendCoinfirmMailCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProdInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetProdInfo(ByVal TradeSeq As String) As String
            Dim results() As Object = Me.Invoke("GetProdInfo", New Object() {TradeSeq})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetProdInfoAsync(ByVal TradeSeq As String)
            Me.GetProdInfoAsync(TradeSeq, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetProdInfoAsync(ByVal TradeSeq As String, ByVal userState As Object)
            If (Me.GetProdInfoOperationCompleted Is Nothing) Then
                Me.GetProdInfoOperationCompleted = AddressOf Me.OnGetProdInfoOperationCompleted
            End If
            Me.InvokeAsync("GetProdInfo", New Object() {TradeSeq}, Me.GetProdInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetProdInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetProdInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetProdInfoCompleted(Me, New GetProdInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InputInvoice", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InputInvoice(ByVal SellTradeListSn As Integer, ByVal PayType As String, ByVal Isinvoicedonate As Integer, ByVal InvoiceName As String, ByVal InvoiceIdNumber As String, ByVal InvoiceTel As String, ByVal InvoiceEmail As String, ByVal InvoiceAddrZip As String, ByVal InvoiceAddr As String) As Integer
            Dim results() As Object = Me.Invoke("InputInvoice", New Object() {SellTradeListSn, PayType, Isinvoicedonate, InvoiceName, InvoiceIdNumber, InvoiceTel, InvoiceEmail, InvoiceAddrZip, InvoiceAddr})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InputInvoiceAsync(ByVal SellTradeListSn As Integer, ByVal PayType As String, ByVal Isinvoicedonate As Integer, ByVal InvoiceName As String, ByVal InvoiceIdNumber As String, ByVal InvoiceTel As String, ByVal InvoiceEmail As String, ByVal InvoiceAddrZip As String, ByVal InvoiceAddr As String)
            Me.InputInvoiceAsync(SellTradeListSn, PayType, Isinvoicedonate, InvoiceName, InvoiceIdNumber, InvoiceTel, InvoiceEmail, InvoiceAddrZip, InvoiceAddr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InputInvoiceAsync(ByVal SellTradeListSn As Integer, ByVal PayType As String, ByVal Isinvoicedonate As Integer, ByVal InvoiceName As String, ByVal InvoiceIdNumber As String, ByVal InvoiceTel As String, ByVal InvoiceEmail As String, ByVal InvoiceAddrZip As String, ByVal InvoiceAddr As String, ByVal userState As Object)
            If (Me.InputInvoiceOperationCompleted Is Nothing) Then
                Me.InputInvoiceOperationCompleted = AddressOf Me.OnInputInvoiceOperationCompleted
            End If
            Me.InvokeAsync("InputInvoice", New Object() {SellTradeListSn, PayType, Isinvoicedonate, InvoiceName, InvoiceIdNumber, InvoiceTel, InvoiceEmail, InvoiceAddrZip, InvoiceAddr}, Me.InputInvoiceOperationCompleted, userState)
        End Sub
        
        Private Sub OnInputInvoiceOperationCompleted(ByVal arg As Object)
            If (Not (Me.InputInvoiceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InputInvoiceCompleted(Me, New InputInvoiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckCustId", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CheckCustId(ByVal CustId As String, ByVal ActiveStartDate As String, ByVal ActiveEndDate As String) As Integer
            Dim results() As Object = Me.Invoke("CheckCustId", New Object() {CustId, ActiveStartDate, ActiveEndDate})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CheckCustIdAsync(ByVal CustId As String, ByVal ActiveStartDate As String, ByVal ActiveEndDate As String)
            Me.CheckCustIdAsync(CustId, ActiveStartDate, ActiveEndDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CheckCustIdAsync(ByVal CustId As String, ByVal ActiveStartDate As String, ByVal ActiveEndDate As String, ByVal userState As Object)
            If (Me.CheckCustIdOperationCompleted Is Nothing) Then
                Me.CheckCustIdOperationCompleted = AddressOf Me.OnCheckCustIdOperationCompleted
            End If
            Me.InvokeAsync("CheckCustId", New Object() {CustId, ActiveStartDate, ActiveEndDate}, Me.CheckCustIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnCheckCustIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.CheckCustIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CheckCustIdCompleted(Me, New CheckCustIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckTempCode", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CheckTempCode(ByVal TempCode As String, ByVal CustIp As String) As String
            Dim results() As Object = Me.Invoke("CheckTempCode", New Object() {TempCode, CustIp})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CheckTempCodeAsync(ByVal TempCode As String, ByVal CustIp As String)
            Me.CheckTempCodeAsync(TempCode, CustIp, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CheckTempCodeAsync(ByVal TempCode As String, ByVal CustIp As String, ByVal userState As Object)
            If (Me.CheckTempCodeOperationCompleted Is Nothing) Then
                Me.CheckTempCodeOperationCompleted = AddressOf Me.OnCheckTempCodeOperationCompleted
            End If
            Me.InvokeAsync("CheckTempCode", New Object() {TempCode, CustIp}, Me.CheckTempCodeOperationCompleted, userState)
        End Sub
        
        Private Sub OnCheckTempCodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.CheckTempCodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CheckTempCodeCompleted(Me, New CheckTempCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckCPTempCode", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CheckCPTempCode(ByVal TempCode As String, ByVal CustIp As String) As String
            Dim results() As Object = Me.Invoke("CheckCPTempCode", New Object() {TempCode, CustIp})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CheckCPTempCodeAsync(ByVal TempCode As String, ByVal CustIp As String)
            Me.CheckCPTempCodeAsync(TempCode, CustIp, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CheckCPTempCodeAsync(ByVal TempCode As String, ByVal CustIp As String, ByVal userState As Object)
            If (Me.CheckCPTempCodeOperationCompleted Is Nothing) Then
                Me.CheckCPTempCodeOperationCompleted = AddressOf Me.OnCheckCPTempCodeOperationCompleted
            End If
            Me.InvokeAsync("CheckCPTempCode", New Object() {TempCode, CustIp}, Me.CheckCPTempCodeOperationCompleted, userState)
        End Sub
        
        Private Sub OnCheckCPTempCodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.CheckCPTempCodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CheckCPTempCodeCompleted(Me, New CheckCPTempCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAtmAccno", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAtmAccno(ByVal Classtype As Integer, ByVal Amount As Integer) As GetAtmAccnoResult
            Dim results() As Object = Me.Invoke("GetAtmAccno", New Object() {Classtype, Amount})
            Return CType(results(0),GetAtmAccnoResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAtmAccnoAsync(ByVal Classtype As Integer, ByVal Amount As Integer)
            Me.GetAtmAccnoAsync(Classtype, Amount, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAtmAccnoAsync(ByVal Classtype As Integer, ByVal Amount As Integer, ByVal userState As Object)
            If (Me.GetAtmAccnoOperationCompleted Is Nothing) Then
                Me.GetAtmAccnoOperationCompleted = AddressOf Me.OnGetAtmAccnoOperationCompleted
            End If
            Me.InvokeAsync("GetAtmAccno", New Object() {Classtype, Amount}, Me.GetAtmAccnoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAtmAccnoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAtmAccnoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAtmAccnoCompleted(Me, New GetAtmAccnoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAtmAccnoBilling", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAtmAccnoBilling(ByVal Classtype As Integer, ByVal Amount As Integer) As GetAtmAccnoResult
            Dim results() As Object = Me.Invoke("GetAtmAccnoBilling", New Object() {Classtype, Amount})
            Return CType(results(0),GetAtmAccnoResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAtmAccnoBillingAsync(ByVal Classtype As Integer, ByVal Amount As Integer)
            Me.GetAtmAccnoBillingAsync(Classtype, Amount, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAtmAccnoBillingAsync(ByVal Classtype As Integer, ByVal Amount As Integer, ByVal userState As Object)
            If (Me.GetAtmAccnoBillingOperationCompleted Is Nothing) Then
                Me.GetAtmAccnoBillingOperationCompleted = AddressOf Me.OnGetAtmAccnoBillingOperationCompleted
            End If
            Me.InvokeAsync("GetAtmAccnoBilling", New Object() {Classtype, Amount}, Me.GetAtmAccnoBillingOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAtmAccnoBillingOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAtmAccnoBillingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAtmAccnoBillingCompleted(Me, New GetAtmAccnoBillingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAtmAccnoForG", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAtmAccnoForG(ByVal Classtype As Integer, ByVal Amount As Integer) As GetAtmAccnoResult
            Dim results() As Object = Me.Invoke("GetAtmAccnoForG", New Object() {Classtype, Amount})
            Return CType(results(0),GetAtmAccnoResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAtmAccnoForGAsync(ByVal Classtype As Integer, ByVal Amount As Integer)
            Me.GetAtmAccnoForGAsync(Classtype, Amount, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAtmAccnoForGAsync(ByVal Classtype As Integer, ByVal Amount As Integer, ByVal userState As Object)
            If (Me.GetAtmAccnoForGOperationCompleted Is Nothing) Then
                Me.GetAtmAccnoForGOperationCompleted = AddressOf Me.OnGetAtmAccnoForGOperationCompleted
            End If
            Me.InvokeAsync("GetAtmAccnoForG", New Object() {Classtype, Amount}, Me.GetAtmAccnoForGOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAtmAccnoForGOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAtmAccnoForGCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAtmAccnoForGCompleted(Me, New GetAtmAccnoForGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAtmAccnoForEsun", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAtmAccnoForEsun(ByVal Classtype As Integer, ByVal Amount As Integer) As GetAtmAccnoResult
            Dim results() As Object = Me.Invoke("GetAtmAccnoForEsun", New Object() {Classtype, Amount})
            Return CType(results(0),GetAtmAccnoResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAtmAccnoForEsunAsync(ByVal Classtype As Integer, ByVal Amount As Integer)
            Me.GetAtmAccnoForEsunAsync(Classtype, Amount, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAtmAccnoForEsunAsync(ByVal Classtype As Integer, ByVal Amount As Integer, ByVal userState As Object)
            If (Me.GetAtmAccnoForEsunOperationCompleted Is Nothing) Then
                Me.GetAtmAccnoForEsunOperationCompleted = AddressOf Me.OnGetAtmAccnoForEsunOperationCompleted
            End If
            Me.InvokeAsync("GetAtmAccnoForEsun", New Object() {Classtype, Amount}, Me.GetAtmAccnoForEsunOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAtmAccnoForEsunOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAtmAccnoForEsunCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAtmAccnoForEsunCompleted(Me, New GetAtmAccnoForEsunCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAtmAccnoForEsunBilling", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAtmAccnoForEsunBilling(ByVal Classtype As Integer, ByVal Amount As Integer) As GetAtmAccnoResult
            Dim results() As Object = Me.Invoke("GetAtmAccnoForEsunBilling", New Object() {Classtype, Amount})
            Return CType(results(0),GetAtmAccnoResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAtmAccnoForEsunBillingAsync(ByVal Classtype As Integer, ByVal Amount As Integer)
            Me.GetAtmAccnoForEsunBillingAsync(Classtype, Amount, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAtmAccnoForEsunBillingAsync(ByVal Classtype As Integer, ByVal Amount As Integer, ByVal userState As Object)
            If (Me.GetAtmAccnoForEsunBillingOperationCompleted Is Nothing) Then
                Me.GetAtmAccnoForEsunBillingOperationCompleted = AddressOf Me.OnGetAtmAccnoForEsunBillingOperationCompleted
            End If
            Me.InvokeAsync("GetAtmAccnoForEsunBilling", New Object() {Classtype, Amount}, Me.GetAtmAccnoForEsunBillingOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAtmAccnoForEsunBillingOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAtmAccnoForEsunBillingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAtmAccnoForEsunBillingCompleted(Me, New GetAtmAccnoForEsunBillingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GenCheckCodeForESun", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GenCheckCodeForESun(ByVal TradeSeq As String) As String
            Dim results() As Object = Me.Invoke("GenCheckCodeForESun", New Object() {TradeSeq})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GenCheckCodeForESunAsync(ByVal TradeSeq As String)
            Me.GenCheckCodeForESunAsync(TradeSeq, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GenCheckCodeForESunAsync(ByVal TradeSeq As String, ByVal userState As Object)
            If (Me.GenCheckCodeForESunOperationCompleted Is Nothing) Then
                Me.GenCheckCodeForESunOperationCompleted = AddressOf Me.OnGenCheckCodeForESunOperationCompleted
            End If
            Me.InvokeAsync("GenCheckCodeForESun", New Object() {TradeSeq}, Me.GenCheckCodeForESunOperationCompleted, userState)
        End Sub
        
        Private Sub OnGenCheckCodeForESunOperationCompleted(ByVal arg As Object)
            If (Not (Me.GenCheckCodeForESunCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GenCheckCodeForESunCompleted(Me, New GenCheckCodeForESunCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAtmAccnoForGf", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAtmAccnoForGf(ByVal Classtype As Integer, ByVal Amount As Integer) As GetAtmAccnoResult
            Dim results() As Object = Me.Invoke("GetAtmAccnoForGf", New Object() {Classtype, Amount})
            Return CType(results(0),GetAtmAccnoResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAtmAccnoForGfAsync(ByVal Classtype As Integer, ByVal Amount As Integer)
            Me.GetAtmAccnoForGfAsync(Classtype, Amount, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAtmAccnoForGfAsync(ByVal Classtype As Integer, ByVal Amount As Integer, ByVal userState As Object)
            If (Me.GetAtmAccnoForGfOperationCompleted Is Nothing) Then
                Me.GetAtmAccnoForGfOperationCompleted = AddressOf Me.OnGetAtmAccnoForGfOperationCompleted
            End If
            Me.InvokeAsync("GetAtmAccnoForGf", New Object() {Classtype, Amount}, Me.GetAtmAccnoForGfOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAtmAccnoForGfOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAtmAccnoForGfCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAtmAccnoForGfCompleted(Me, New GetAtmAccnoForGfCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAtmAccnoForGfBilling", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAtmAccnoForGfBilling(ByVal Classtype As Integer, ByVal Amount As Integer) As GetAtmAccnoResult
            Dim results() As Object = Me.Invoke("GetAtmAccnoForGfBilling", New Object() {Classtype, Amount})
            Return CType(results(0),GetAtmAccnoResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAtmAccnoForGfBillingAsync(ByVal Classtype As Integer, ByVal Amount As Integer)
            Me.GetAtmAccnoForGfBillingAsync(Classtype, Amount, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAtmAccnoForGfBillingAsync(ByVal Classtype As Integer, ByVal Amount As Integer, ByVal userState As Object)
            If (Me.GetAtmAccnoForGfBillingOperationCompleted Is Nothing) Then
                Me.GetAtmAccnoForGfBillingOperationCompleted = AddressOf Me.OnGetAtmAccnoForGfBillingOperationCompleted
            End If
            Me.InvokeAsync("GetAtmAccnoForGfBilling", New Object() {Classtype, Amount}, Me.GetAtmAccnoForGfBillingOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAtmAccnoForGfBillingOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAtmAccnoForGfBillingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAtmAccnoForGfBillingCompleted(Me, New GetAtmAccnoForGfBillingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAtmAccnoForTS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAtmAccnoForTS(ByVal Classtype As Integer, ByVal Amount As Integer, ByVal DDay As Integer) As GetAtmAccnoForTSResult
            Dim results() As Object = Me.Invoke("GetAtmAccnoForTS", New Object() {Classtype, Amount, DDay})
            Return CType(results(0),GetAtmAccnoForTSResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAtmAccnoForTSAsync(ByVal Classtype As Integer, ByVal Amount As Integer, ByVal DDay As Integer)
            Me.GetAtmAccnoForTSAsync(Classtype, Amount, DDay, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAtmAccnoForTSAsync(ByVal Classtype As Integer, ByVal Amount As Integer, ByVal DDay As Integer, ByVal userState As Object)
            If (Me.GetAtmAccnoForTSOperationCompleted Is Nothing) Then
                Me.GetAtmAccnoForTSOperationCompleted = AddressOf Me.OnGetAtmAccnoForTSOperationCompleted
            End If
            Me.InvokeAsync("GetAtmAccnoForTS", New Object() {Classtype, Amount, DDay}, Me.GetAtmAccnoForTSOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAtmAccnoForTSOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAtmAccnoForTSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAtmAccnoForTSCompleted(Me, New GetAtmAccnoForTSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAtmAccnoForTSBilling", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAtmAccnoForTSBilling(ByVal Classtype As Integer, ByVal Amount As Integer, ByVal DDay As Integer) As GetAtmAccnoForTSResult
            Dim results() As Object = Me.Invoke("GetAtmAccnoForTSBilling", New Object() {Classtype, Amount, DDay})
            Return CType(results(0),GetAtmAccnoForTSResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAtmAccnoForTSBillingAsync(ByVal Classtype As Integer, ByVal Amount As Integer, ByVal DDay As Integer)
            Me.GetAtmAccnoForTSBillingAsync(Classtype, Amount, DDay, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAtmAccnoForTSBillingAsync(ByVal Classtype As Integer, ByVal Amount As Integer, ByVal DDay As Integer, ByVal userState As Object)
            If (Me.GetAtmAccnoForTSBillingOperationCompleted Is Nothing) Then
                Me.GetAtmAccnoForTSBillingOperationCompleted = AddressOf Me.OnGetAtmAccnoForTSBillingOperationCompleted
            End If
            Me.InvokeAsync("GetAtmAccnoForTSBilling", New Object() {Classtype, Amount, DDay}, Me.GetAtmAccnoForTSBillingOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAtmAccnoForTSBillingOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAtmAccnoForTSBillingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAtmAccnoForTSBillingCompleted(Me, New GetAtmAccnoForTSBillingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAtmAccnoForLand", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAtmAccnoForLand(ByVal Classtype As Integer, ByVal Amount As Integer, ByVal Price As String) As GetAtmAccnoResult
            Dim results() As Object = Me.Invoke("GetAtmAccnoForLand", New Object() {Classtype, Amount, Price})
            Return CType(results(0),GetAtmAccnoResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAtmAccnoForLandAsync(ByVal Classtype As Integer, ByVal Amount As Integer, ByVal Price As String)
            Me.GetAtmAccnoForLandAsync(Classtype, Amount, Price, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAtmAccnoForLandAsync(ByVal Classtype As Integer, ByVal Amount As Integer, ByVal Price As String, ByVal userState As Object)
            If (Me.GetAtmAccnoForLandOperationCompleted Is Nothing) Then
                Me.GetAtmAccnoForLandOperationCompleted = AddressOf Me.OnGetAtmAccnoForLandOperationCompleted
            End If
            Me.InvokeAsync("GetAtmAccnoForLand", New Object() {Classtype, Amount, Price}, Me.GetAtmAccnoForLandOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAtmAccnoForLandOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAtmAccnoForLandCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAtmAccnoForLandCompleted(Me, New GetAtmAccnoForLandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GenCheckCodeForLand", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GenCheckCodeForLand(ByVal TradeSeq As String, ByVal Price As String) As String
            Dim results() As Object = Me.Invoke("GenCheckCodeForLand", New Object() {TradeSeq, Price})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GenCheckCodeForLandAsync(ByVal TradeSeq As String, ByVal Price As String)
            Me.GenCheckCodeForLandAsync(TradeSeq, Price, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GenCheckCodeForLandAsync(ByVal TradeSeq As String, ByVal Price As String, ByVal userState As Object)
            If (Me.GenCheckCodeForLandOperationCompleted Is Nothing) Then
                Me.GenCheckCodeForLandOperationCompleted = AddressOf Me.OnGenCheckCodeForLandOperationCompleted
            End If
            Me.InvokeAsync("GenCheckCodeForLand", New Object() {TradeSeq, Price}, Me.GenCheckCodeForLandOperationCompleted, userState)
        End Sub
        
        Private Sub OnGenCheckCodeForLandOperationCompleted(ByVal arg As Object)
            If (Not (Me.GenCheckCodeForLandCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GenCheckCodeForLandCompleted(Me, New GenCheckCodeForLandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCardPriceForLand", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCardPriceForLand(ByVal BankProductSn As String) As String
            Dim results() As Object = Me.Invoke("GetCardPriceForLand", New Object() {BankProductSn})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCardPriceForLandAsync(ByVal BankProductSn As String)
            Me.GetCardPriceForLandAsync(BankProductSn, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCardPriceForLandAsync(ByVal BankProductSn As String, ByVal userState As Object)
            If (Me.GetCardPriceForLandOperationCompleted Is Nothing) Then
                Me.GetCardPriceForLandOperationCompleted = AddressOf Me.OnGetCardPriceForLandOperationCompleted
            End If
            Me.InvokeAsync("GetCardPriceForLand", New Object() {BankProductSn}, Me.GetCardPriceForLandOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCardPriceForLandOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCardPriceForLandCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCardPriceForLandCompleted(Me, New GetCardPriceForLandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAtmAccnoForHuanan", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAtmAccnoForHuanan(ByVal Classtype As Integer, ByVal Amount As Integer, ByVal Price As String) As GetAtmAccnoResult
            Dim results() As Object = Me.Invoke("GetAtmAccnoForHuanan", New Object() {Classtype, Amount, Price})
            Return CType(results(0),GetAtmAccnoResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAtmAccnoForHuananAsync(ByVal Classtype As Integer, ByVal Amount As Integer, ByVal Price As String)
            Me.GetAtmAccnoForHuananAsync(Classtype, Amount, Price, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAtmAccnoForHuananAsync(ByVal Classtype As Integer, ByVal Amount As Integer, ByVal Price As String, ByVal userState As Object)
            If (Me.GetAtmAccnoForHuananOperationCompleted Is Nothing) Then
                Me.GetAtmAccnoForHuananOperationCompleted = AddressOf Me.OnGetAtmAccnoForHuananOperationCompleted
            End If
            Me.InvokeAsync("GetAtmAccnoForHuanan", New Object() {Classtype, Amount, Price}, Me.GetAtmAccnoForHuananOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAtmAccnoForHuananOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAtmAccnoForHuananCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAtmAccnoForHuananCompleted(Me, New GetAtmAccnoForHuananCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GenCheckCodeForHuanan", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GenCheckCodeForHuanan(ByVal TradeSeq As String, ByVal Price As String) As String
            Dim results() As Object = Me.Invoke("GenCheckCodeForHuanan", New Object() {TradeSeq, Price})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GenCheckCodeForHuananAsync(ByVal TradeSeq As String, ByVal Price As String)
            Me.GenCheckCodeForHuananAsync(TradeSeq, Price, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GenCheckCodeForHuananAsync(ByVal TradeSeq As String, ByVal Price As String, ByVal userState As Object)
            If (Me.GenCheckCodeForHuananOperationCompleted Is Nothing) Then
                Me.GenCheckCodeForHuananOperationCompleted = AddressOf Me.OnGenCheckCodeForHuananOperationCompleted
            End If
            Me.InvokeAsync("GenCheckCodeForHuanan", New Object() {TradeSeq, Price}, Me.GenCheckCodeForHuananOperationCompleted, userState)
        End Sub
        
        Private Sub OnGenCheckCodeForHuananOperationCompleted(ByVal arg As Object)
            If (Not (Me.GenCheckCodeForHuananCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GenCheckCodeForHuananCompleted(Me, New GenCheckCodeForHuananCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckBlackIP", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CheckBlackIP(ByVal CheckIP As String) As CheckBlackIpResult
            Dim results() As Object = Me.Invoke("CheckBlackIP", New Object() {CheckIP})
            Return CType(results(0),CheckBlackIpResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CheckBlackIPAsync(ByVal CheckIP As String)
            Me.CheckBlackIPAsync(CheckIP, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CheckBlackIPAsync(ByVal CheckIP As String, ByVal userState As Object)
            If (Me.CheckBlackIPOperationCompleted Is Nothing) Then
                Me.CheckBlackIPOperationCompleted = AddressOf Me.OnCheckBlackIPOperationCompleted
            End If
            Me.InvokeAsync("CheckBlackIP", New Object() {CheckIP}, Me.CheckBlackIPOperationCompleted, userState)
        End Sub
        
        Private Sub OnCheckBlackIPOperationCompleted(ByVal arg As Object)
            If (Not (Me.CheckBlackIPCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CheckBlackIPCompleted(Me, New CheckBlackIPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MyCardBlackIpInsert", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MyCardBlackIpInsert(ByVal StartIp As String, ByVal EndIp As String) As InsertBlackIpResult
            Dim results() As Object = Me.Invoke("MyCardBlackIpInsert", New Object() {StartIp, EndIp})
            Return CType(results(0),InsertBlackIpResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MyCardBlackIpInsertAsync(ByVal StartIp As String, ByVal EndIp As String)
            Me.MyCardBlackIpInsertAsync(StartIp, EndIp, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MyCardBlackIpInsertAsync(ByVal StartIp As String, ByVal EndIp As String, ByVal userState As Object)
            If (Me.MyCardBlackIpInsertOperationCompleted Is Nothing) Then
                Me.MyCardBlackIpInsertOperationCompleted = AddressOf Me.OnMyCardBlackIpInsertOperationCompleted
            End If
            Me.InvokeAsync("MyCardBlackIpInsert", New Object() {StartIp, EndIp}, Me.MyCardBlackIpInsertOperationCompleted, userState)
        End Sub
        
        Private Sub OnMyCardBlackIpInsertOperationCompleted(ByVal arg As Object)
            If (Not (Me.MyCardBlackIpInsertCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MyCardBlackIpInsertCompleted(Me, New MyCardBlackIpInsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MyCardBlackCustIdInsert", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MyCardBlackCustIdInsert(ByVal CustId As String) As MyCardBlackCustIdResult
            Dim results() As Object = Me.Invoke("MyCardBlackCustIdInsert", New Object() {CustId})
            Return CType(results(0),MyCardBlackCustIdResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MyCardBlackCustIdInsertAsync(ByVal CustId As String)
            Me.MyCardBlackCustIdInsertAsync(CustId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MyCardBlackCustIdInsertAsync(ByVal CustId As String, ByVal userState As Object)
            If (Me.MyCardBlackCustIdInsertOperationCompleted Is Nothing) Then
                Me.MyCardBlackCustIdInsertOperationCompleted = AddressOf Me.OnMyCardBlackCustIdInsertOperationCompleted
            End If
            Me.InvokeAsync("MyCardBlackCustIdInsert", New Object() {CustId}, Me.MyCardBlackCustIdInsertOperationCompleted, userState)
        End Sub
        
        Private Sub OnMyCardBlackCustIdInsertOperationCompleted(ByVal arg As Object)
            If (Not (Me.MyCardBlackCustIdInsertCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MyCardBlackCustIdInsertCompleted(Me, New MyCardBlackCustIdInsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MyCardBlackCustIdRemove", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MyCardBlackCustIdRemove(ByVal CustId As String) As MyCardBlackCustIdResult
            Dim results() As Object = Me.Invoke("MyCardBlackCustIdRemove", New Object() {CustId})
            Return CType(results(0),MyCardBlackCustIdResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MyCardBlackCustIdRemoveAsync(ByVal CustId As String)
            Me.MyCardBlackCustIdRemoveAsync(CustId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MyCardBlackCustIdRemoveAsync(ByVal CustId As String, ByVal userState As Object)
            If (Me.MyCardBlackCustIdRemoveOperationCompleted Is Nothing) Then
                Me.MyCardBlackCustIdRemoveOperationCompleted = AddressOf Me.OnMyCardBlackCustIdRemoveOperationCompleted
            End If
            Me.InvokeAsync("MyCardBlackCustIdRemove", New Object() {CustId}, Me.MyCardBlackCustIdRemoveOperationCompleted, userState)
        End Sub
        
        Private Sub OnMyCardBlackCustIdRemoveOperationCompleted(ByVal arg As Object)
            If (Not (Me.MyCardBlackCustIdRemoveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MyCardBlackCustIdRemoveCompleted(Me, New MyCardBlackCustIdRemoveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateMyCardTradeInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UpdateMyCardTradeInfo(ByVal ExecuteStr As String, ByVal ParametersName() As String, ByVal ParametersValue() As String)
            Me.Invoke("UpdateMyCardTradeInfo", New Object() {ExecuteStr, ParametersName, ParametersValue})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateMyCardTradeInfoAsync(ByVal ExecuteStr As String, ByVal ParametersName() As String, ByVal ParametersValue() As String)
            Me.UpdateMyCardTradeInfoAsync(ExecuteStr, ParametersName, ParametersValue, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateMyCardTradeInfoAsync(ByVal ExecuteStr As String, ByVal ParametersName() As String, ByVal ParametersValue() As String, ByVal userState As Object)
            If (Me.UpdateMyCardTradeInfoOperationCompleted Is Nothing) Then
                Me.UpdateMyCardTradeInfoOperationCompleted = AddressOf Me.OnUpdateMyCardTradeInfoOperationCompleted
            End If
            Me.InvokeAsync("UpdateMyCardTradeInfo", New Object() {ExecuteStr, ParametersName, ParametersValue}, Me.UpdateMyCardTradeInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateMyCardTradeInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateMyCardTradeInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateMyCardTradeInfoCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMyCardSingleTradeInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMyCardSingleTradeInfo(ByVal ExecuteStr As String, ByVal ParametersName() As String, ByVal ParametersValue() As String, ByVal ReturnCols As Integer) As String()
            Dim results() As Object = Me.Invoke("GetMyCardSingleTradeInfo", New Object() {ExecuteStr, ParametersName, ParametersValue, ReturnCols})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMyCardSingleTradeInfoAsync(ByVal ExecuteStr As String, ByVal ParametersName() As String, ByVal ParametersValue() As String, ByVal ReturnCols As Integer)
            Me.GetMyCardSingleTradeInfoAsync(ExecuteStr, ParametersName, ParametersValue, ReturnCols, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMyCardSingleTradeInfoAsync(ByVal ExecuteStr As String, ByVal ParametersName() As String, ByVal ParametersValue() As String, ByVal ReturnCols As Integer, ByVal userState As Object)
            If (Me.GetMyCardSingleTradeInfoOperationCompleted Is Nothing) Then
                Me.GetMyCardSingleTradeInfoOperationCompleted = AddressOf Me.OnGetMyCardSingleTradeInfoOperationCompleted
            End If
            Me.InvokeAsync("GetMyCardSingleTradeInfo", New Object() {ExecuteStr, ParametersName, ParametersValue, ReturnCols}, Me.GetMyCardSingleTradeInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMyCardSingleTradeInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMyCardSingleTradeInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMyCardSingleTradeInfoCompleted(Me, New GetMyCardSingleTradeInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMyCardSingleTradeInfoEx", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMyCardSingleTradeInfoEx(ByVal DbName As String, ByVal ExecuteStr As String, ByVal ParametersName() As String, ByVal ParametersValue() As String, ByVal ReturnCols As Integer) As String()
            Dim results() As Object = Me.Invoke("GetMyCardSingleTradeInfoEx", New Object() {DbName, ExecuteStr, ParametersName, ParametersValue, ReturnCols})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMyCardSingleTradeInfoExAsync(ByVal DbName As String, ByVal ExecuteStr As String, ByVal ParametersName() As String, ByVal ParametersValue() As String, ByVal ReturnCols As Integer)
            Me.GetMyCardSingleTradeInfoExAsync(DbName, ExecuteStr, ParametersName, ParametersValue, ReturnCols, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMyCardSingleTradeInfoExAsync(ByVal DbName As String, ByVal ExecuteStr As String, ByVal ParametersName() As String, ByVal ParametersValue() As String, ByVal ReturnCols As Integer, ByVal userState As Object)
            If (Me.GetMyCardSingleTradeInfoExOperationCompleted Is Nothing) Then
                Me.GetMyCardSingleTradeInfoExOperationCompleted = AddressOf Me.OnGetMyCardSingleTradeInfoExOperationCompleted
            End If
            Me.InvokeAsync("GetMyCardSingleTradeInfoEx", New Object() {DbName, ExecuteStr, ParametersName, ParametersValue, ReturnCols}, Me.GetMyCardSingleTradeInfoExOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMyCardSingleTradeInfoExOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMyCardSingleTradeInfoExCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMyCardSingleTradeInfoExCompleted(Me, New GetMyCardSingleTradeInfoExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MyCardSaveList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MyCardSaveList(ByVal MyCardCardId As String, ByVal CreateIp As String) As SaveResult
            Dim results() As Object = Me.Invoke("MyCardSaveList", New Object() {MyCardCardId, CreateIp})
            Return CType(results(0),SaveResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MyCardSaveListAsync(ByVal MyCardCardId As String, ByVal CreateIp As String)
            Me.MyCardSaveListAsync(MyCardCardId, CreateIp, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MyCardSaveListAsync(ByVal MyCardCardId As String, ByVal CreateIp As String, ByVal userState As Object)
            If (Me.MyCardSaveListOperationCompleted Is Nothing) Then
                Me.MyCardSaveListOperationCompleted = AddressOf Me.OnMyCardSaveListOperationCompleted
            End If
            Me.InvokeAsync("MyCardSaveList", New Object() {MyCardCardId, CreateIp}, Me.MyCardSaveListOperationCompleted, userState)
        End Sub
        
        Private Sub OnMyCardSaveListOperationCompleted(ByVal arg As Object)
            If (Not (Me.MyCardSaveListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MyCardSaveListCompleted(Me, New MyCardSaveListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MyCardSaveListSaveCardType", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MyCardSaveListSaveCardType(ByVal SaveSeq As String, ByVal GameId As String, ByVal CardType As Integer) As Boolean
            Dim results() As Object = Me.Invoke("MyCardSaveListSaveCardType", New Object() {SaveSeq, GameId, CardType})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MyCardSaveListSaveCardTypeAsync(ByVal SaveSeq As String, ByVal GameId As String, ByVal CardType As Integer)
            Me.MyCardSaveListSaveCardTypeAsync(SaveSeq, GameId, CardType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MyCardSaveListSaveCardTypeAsync(ByVal SaveSeq As String, ByVal GameId As String, ByVal CardType As Integer, ByVal userState As Object)
            If (Me.MyCardSaveListSaveCardTypeOperationCompleted Is Nothing) Then
                Me.MyCardSaveListSaveCardTypeOperationCompleted = AddressOf Me.OnMyCardSaveListSaveCardTypeOperationCompleted
            End If
            Me.InvokeAsync("MyCardSaveListSaveCardType", New Object() {SaveSeq, GameId, CardType}, Me.MyCardSaveListSaveCardTypeOperationCompleted, userState)
        End Sub
        
        Private Sub OnMyCardSaveListSaveCardTypeOperationCompleted(ByVal arg As Object)
            If (Not (Me.MyCardSaveListSaveCardTypeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MyCardSaveListSaveCardTypeCompleted(Me, New MyCardSaveListSaveCardTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MyCardTakeInvoice", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MyCardTakeInvoice(ByVal TradeSeq As String) As Boolean
            Dim results() As Object = Me.Invoke("MyCardTakeInvoice", New Object() {TradeSeq})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MyCardTakeInvoiceAsync(ByVal TradeSeq As String)
            Me.MyCardTakeInvoiceAsync(TradeSeq, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MyCardTakeInvoiceAsync(ByVal TradeSeq As String, ByVal userState As Object)
            If (Me.MyCardTakeInvoiceOperationCompleted Is Nothing) Then
                Me.MyCardTakeInvoiceOperationCompleted = AddressOf Me.OnMyCardTakeInvoiceOperationCompleted
            End If
            Me.InvokeAsync("MyCardTakeInvoice", New Object() {TradeSeq}, Me.MyCardTakeInvoiceOperationCompleted, userState)
        End Sub
        
        Private Sub OnMyCardTakeInvoiceOperationCompleted(ByVal arg As Object)
            If (Not (Me.MyCardTakeInvoiceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MyCardTakeInvoiceCompleted(Me, New MyCardTakeInvoiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMyCardMultiTradeInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMyCardMultiTradeInfo(ByVal ExecuteStr As String, ByVal ParametersName() As String, ByVal ParametersValue() As String, ByVal ReturnCols As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetMyCardMultiTradeInfo", New Object() {ExecuteStr, ParametersName, ParametersValue, ReturnCols})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMyCardMultiTradeInfoAsync(ByVal ExecuteStr As String, ByVal ParametersName() As String, ByVal ParametersValue() As String, ByVal ReturnCols As Integer)
            Me.GetMyCardMultiTradeInfoAsync(ExecuteStr, ParametersName, ParametersValue, ReturnCols, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMyCardMultiTradeInfoAsync(ByVal ExecuteStr As String, ByVal ParametersName() As String, ByVal ParametersValue() As String, ByVal ReturnCols As Integer, ByVal userState As Object)
            If (Me.GetMyCardMultiTradeInfoOperationCompleted Is Nothing) Then
                Me.GetMyCardMultiTradeInfoOperationCompleted = AddressOf Me.OnGetMyCardMultiTradeInfoOperationCompleted
            End If
            Me.InvokeAsync("GetMyCardMultiTradeInfo", New Object() {ExecuteStr, ParametersName, ParametersValue, ReturnCols}, Me.GetMyCardMultiTradeInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMyCardMultiTradeInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMyCardMultiTradeInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMyCardMultiTradeInfoCompleted(Me, New GetMyCardMultiTradeInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMyCardMultiTradeInfoEx", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMyCardMultiTradeInfoEx(ByVal DbName As String, ByVal ExecuteStr As String, ByVal ParametersName() As String, ByVal ParametersValue() As String, ByVal ReturnCols As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetMyCardMultiTradeInfoEx", New Object() {DbName, ExecuteStr, ParametersName, ParametersValue, ReturnCols})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMyCardMultiTradeInfoExAsync(ByVal DbName As String, ByVal ExecuteStr As String, ByVal ParametersName() As String, ByVal ParametersValue() As String, ByVal ReturnCols As Integer)
            Me.GetMyCardMultiTradeInfoExAsync(DbName, ExecuteStr, ParametersName, ParametersValue, ReturnCols, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMyCardMultiTradeInfoExAsync(ByVal DbName As String, ByVal ExecuteStr As String, ByVal ParametersName() As String, ByVal ParametersValue() As String, ByVal ReturnCols As Integer, ByVal userState As Object)
            If (Me.GetMyCardMultiTradeInfoExOperationCompleted Is Nothing) Then
                Me.GetMyCardMultiTradeInfoExOperationCompleted = AddressOf Me.OnGetMyCardMultiTradeInfoExOperationCompleted
            End If
            Me.InvokeAsync("GetMyCardMultiTradeInfoEx", New Object() {DbName, ExecuteStr, ParametersName, ParametersValue, ReturnCols}, Me.GetMyCardMultiTradeInfoExOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMyCardMultiTradeInfoExOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMyCardMultiTradeInfoExCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMyCardMultiTradeInfoExCompleted(Me, New GetMyCardMultiTradeInfoExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMyCardMultiTradeInfoEx2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMyCardMultiTradeInfoEx2(ByVal DbName As String, ByVal eCommandType As CommandType, ByVal ExecuteStr As String, ByVal ParametersName() As String, ByVal ParametersValue() As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetMyCardMultiTradeInfoEx2", New Object() {DbName, eCommandType, ExecuteStr, ParametersName, ParametersValue})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMyCardMultiTradeInfoEx2Async(ByVal DbName As String, ByVal eCommandType As CommandType, ByVal ExecuteStr As String, ByVal ParametersName() As String, ByVal ParametersValue() As String)
            Me.GetMyCardMultiTradeInfoEx2Async(DbName, eCommandType, ExecuteStr, ParametersName, ParametersValue, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMyCardMultiTradeInfoEx2Async(ByVal DbName As String, ByVal eCommandType As CommandType, ByVal ExecuteStr As String, ByVal ParametersName() As String, ByVal ParametersValue() As String, ByVal userState As Object)
            If (Me.GetMyCardMultiTradeInfoEx2OperationCompleted Is Nothing) Then
                Me.GetMyCardMultiTradeInfoEx2OperationCompleted = AddressOf Me.OnGetMyCardMultiTradeInfoEx2OperationCompleted
            End If
            Me.InvokeAsync("GetMyCardMultiTradeInfoEx2", New Object() {DbName, eCommandType, ExecuteStr, ParametersName, ParametersValue}, Me.GetMyCardMultiTradeInfoEx2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMyCardMultiTradeInfoEx2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMyCardMultiTradeInfoEx2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMyCardMultiTradeInfoEx2Completed(Me, New GetMyCardMultiTradeInfoEx2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMyCardMultiTradeInfo14", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMyCardMultiTradeInfo14(ByVal ExecuteStr As String, ByVal ParametersName() As String, ByVal ParametersValue() As String, ByVal ReturnCols As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetMyCardMultiTradeInfo14", New Object() {ExecuteStr, ParametersName, ParametersValue, ReturnCols})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMyCardMultiTradeInfo14Async(ByVal ExecuteStr As String, ByVal ParametersName() As String, ByVal ParametersValue() As String, ByVal ReturnCols As Integer)
            Me.GetMyCardMultiTradeInfo14Async(ExecuteStr, ParametersName, ParametersValue, ReturnCols, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMyCardMultiTradeInfo14Async(ByVal ExecuteStr As String, ByVal ParametersName() As String, ByVal ParametersValue() As String, ByVal ReturnCols As Integer, ByVal userState As Object)
            If (Me.GetMyCardMultiTradeInfo14OperationCompleted Is Nothing) Then
                Me.GetMyCardMultiTradeInfo14OperationCompleted = AddressOf Me.OnGetMyCardMultiTradeInfo14OperationCompleted
            End If
            Me.InvokeAsync("GetMyCardMultiTradeInfo14", New Object() {ExecuteStr, ParametersName, ParametersValue, ReturnCols}, Me.GetMyCardMultiTradeInfo14OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMyCardMultiTradeInfo14OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMyCardMultiTradeInfo14CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMyCardMultiTradeInfo14Completed(Me, New GetMyCardMultiTradeInfo14CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MyCard_CPCheckTempCode", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MyCard_CPCheckTempCode(ByVal TradeTempCode As String) As CheckTempCodeResult
            Dim results() As Object = Me.Invoke("MyCard_CPCheckTempCode", New Object() {TradeTempCode})
            Return CType(results(0),CheckTempCodeResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MyCard_CPCheckTempCodeAsync(ByVal TradeTempCode As String)
            Me.MyCard_CPCheckTempCodeAsync(TradeTempCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MyCard_CPCheckTempCodeAsync(ByVal TradeTempCode As String, ByVal userState As Object)
            If (Me.MyCard_CPCheckTempCodeOperationCompleted Is Nothing) Then
                Me.MyCard_CPCheckTempCodeOperationCompleted = AddressOf Me.OnMyCard_CPCheckTempCodeOperationCompleted
            End If
            Me.InvokeAsync("MyCard_CPCheckTempCode", New Object() {TradeTempCode}, Me.MyCard_CPCheckTempCodeOperationCompleted, userState)
        End Sub
        
        Private Sub OnMyCard_CPCheckTempCodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.MyCard_CPCheckTempCodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MyCard_CPCheckTempCodeCompleted(Me, New MyCard_CPCheckTempCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MyCard_CPTradeListInsert", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MyCard_CPTradeListInsert(ByVal TradeTempCode As String, ByVal CustId As String, ByVal TradeSeqName As String, ByVal Mobile As String, ByVal Email As String, ByVal CustIp As String) As CPTradeListInsertResult
            Dim results() As Object = Me.Invoke("MyCard_CPTradeListInsert", New Object() {TradeTempCode, CustId, TradeSeqName, Mobile, Email, CustIp})
            Return CType(results(0),CPTradeListInsertResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MyCard_CPTradeListInsertAsync(ByVal TradeTempCode As String, ByVal CustId As String, ByVal TradeSeqName As String, ByVal Mobile As String, ByVal Email As String, ByVal CustIp As String)
            Me.MyCard_CPTradeListInsertAsync(TradeTempCode, CustId, TradeSeqName, Mobile, Email, CustIp, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MyCard_CPTradeListInsertAsync(ByVal TradeTempCode As String, ByVal CustId As String, ByVal TradeSeqName As String, ByVal Mobile As String, ByVal Email As String, ByVal CustIp As String, ByVal userState As Object)
            If (Me.MyCard_CPTradeListInsertOperationCompleted Is Nothing) Then
                Me.MyCard_CPTradeListInsertOperationCompleted = AddressOf Me.OnMyCard_CPTradeListInsertOperationCompleted
            End If
            Me.InvokeAsync("MyCard_CPTradeListInsert", New Object() {TradeTempCode, CustId, TradeSeqName, Mobile, Email, CustIp}, Me.MyCard_CPTradeListInsertOperationCompleted, userState)
        End Sub
        
        Private Sub OnMyCard_CPTradeListInsertOperationCompleted(ByVal arg As Object)
            If (Not (Me.MyCard_CPTradeListInsertCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MyCard_CPTradeListInsertCompleted(Me, New MyCard_CPTradeListInsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MyCard_CPTradeListRender", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MyCard_CPTradeListRender(ByVal TradeTempCode As String, ByVal CustId As String, ByVal TradeCode As String, ByVal TempCode As String) As CPTradeListRenderResult
            Dim results() As Object = Me.Invoke("MyCard_CPTradeListRender", New Object() {TradeTempCode, CustId, TradeCode, TempCode})
            Return CType(results(0),CPTradeListRenderResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MyCard_CPTradeListRenderAsync(ByVal TradeTempCode As String, ByVal CustId As String, ByVal TradeCode As String, ByVal TempCode As String)
            Me.MyCard_CPTradeListRenderAsync(TradeTempCode, CustId, TradeCode, TempCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MyCard_CPTradeListRenderAsync(ByVal TradeTempCode As String, ByVal CustId As String, ByVal TradeCode As String, ByVal TempCode As String, ByVal userState As Object)
            If (Me.MyCard_CPTradeListRenderOperationCompleted Is Nothing) Then
                Me.MyCard_CPTradeListRenderOperationCompleted = AddressOf Me.OnMyCard_CPTradeListRenderOperationCompleted
            End If
            Me.InvokeAsync("MyCard_CPTradeListRender", New Object() {TradeTempCode, CustId, TradeCode, TempCode}, Me.MyCard_CPTradeListRenderOperationCompleted, userState)
        End Sub
        
        Private Sub OnMyCard_CPTradeListRenderOperationCompleted(ByVal arg As Object)
            If (Not (Me.MyCard_CPTradeListRenderCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MyCard_CPTradeListRenderCompleted(Me, New MyCard_CPTradeListRenderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MyCard_CPTradeListRenderForAtm", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MyCard_CPTradeListRenderForAtm(ByVal AtmSn As String, ByVal PaymentAmount As Integer) As CPTradeListRenderResultForAtm
            Dim results() As Object = Me.Invoke("MyCard_CPTradeListRenderForAtm", New Object() {AtmSn, PaymentAmount})
            Return CType(results(0),CPTradeListRenderResultForAtm)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MyCard_CPTradeListRenderForAtmAsync(ByVal AtmSn As String, ByVal PaymentAmount As Integer)
            Me.MyCard_CPTradeListRenderForAtmAsync(AtmSn, PaymentAmount, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MyCard_CPTradeListRenderForAtmAsync(ByVal AtmSn As String, ByVal PaymentAmount As Integer, ByVal userState As Object)
            If (Me.MyCard_CPTradeListRenderForAtmOperationCompleted Is Nothing) Then
                Me.MyCard_CPTradeListRenderForAtmOperationCompleted = AddressOf Me.OnMyCard_CPTradeListRenderForAtmOperationCompleted
            End If
            Me.InvokeAsync("MyCard_CPTradeListRenderForAtm", New Object() {AtmSn, PaymentAmount}, Me.MyCard_CPTradeListRenderForAtmOperationCompleted, userState)
        End Sub
        
        Private Sub OnMyCard_CPTradeListRenderForAtmOperationCompleted(ByVal arg As Object)
            If (Not (Me.MyCard_CPTradeListRenderForAtmCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MyCard_CPTradeListRenderForAtmCompleted(Me, New MyCard_CPTradeListRenderForAtmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCPBankFactoryPath", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCPBankFactoryPath(ByVal PaymentId As String) As String
            Dim results() As Object = Me.Invoke("GetCPBankFactoryPath", New Object() {PaymentId})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCPBankFactoryPathAsync(ByVal PaymentId As String)
            Me.GetCPBankFactoryPathAsync(PaymentId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCPBankFactoryPathAsync(ByVal PaymentId As String, ByVal userState As Object)
            If (Me.GetCPBankFactoryPathOperationCompleted Is Nothing) Then
                Me.GetCPBankFactoryPathOperationCompleted = AddressOf Me.OnGetCPBankFactoryPathOperationCompleted
            End If
            Me.InvokeAsync("GetCPBankFactoryPath", New Object() {PaymentId}, Me.GetCPBankFactoryPathOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCPBankFactoryPathOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCPBankFactoryPathCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCPBankFactoryPathCompleted(Me, New GetCPBankFactoryPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCPFactoryReturnUrl", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCPFactoryReturnUrl(ByVal TradeTempCode As String, ByVal QueryType As Integer) As GetCPFactoryReturnUrlResult
            Dim results() As Object = Me.Invoke("GetCPFactoryReturnUrl", New Object() {TradeTempCode, QueryType})
            Return CType(results(0),GetCPFactoryReturnUrlResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCPFactoryReturnUrlAsync(ByVal TradeTempCode As String, ByVal QueryType As Integer)
            Me.GetCPFactoryReturnUrlAsync(TradeTempCode, QueryType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCPFactoryReturnUrlAsync(ByVal TradeTempCode As String, ByVal QueryType As Integer, ByVal userState As Object)
            If (Me.GetCPFactoryReturnUrlOperationCompleted Is Nothing) Then
                Me.GetCPFactoryReturnUrlOperationCompleted = AddressOf Me.OnGetCPFactoryReturnUrlOperationCompleted
            End If
            Me.InvokeAsync("GetCPFactoryReturnUrl", New Object() {TradeTempCode, QueryType}, Me.GetCPFactoryReturnUrlOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCPFactoryReturnUrlOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCPFactoryReturnUrlCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCPFactoryReturnUrlCompleted(Me, New GetCPFactoryReturnUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MyCardCheckFFCcard", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MyCardCheckFFCcard(ByVal CardNum As String) As Integer
            Dim results() As Object = Me.Invoke("MyCardCheckFFCcard", New Object() {CardNum})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MyCardCheckFFCcardAsync(ByVal CardNum As String)
            Me.MyCardCheckFFCcardAsync(CardNum, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MyCardCheckFFCcardAsync(ByVal CardNum As String, ByVal userState As Object)
            If (Me.MyCardCheckFFCcardOperationCompleted Is Nothing) Then
                Me.MyCardCheckFFCcardOperationCompleted = AddressOf Me.OnMyCardCheckFFCcardOperationCompleted
            End If
            Me.InvokeAsync("MyCardCheckFFCcard", New Object() {CardNum}, Me.MyCardCheckFFCcardOperationCompleted, userState)
        End Sub
        
        Private Sub OnMyCardCheckFFCcardOperationCompleted(ByVal arg As Object)
            If (Not (Me.MyCardCheckFFCcardCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MyCardCheckFFCcardCompleted(Me, New MyCardCheckFFCcardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MyCardChangeSohwCardStatus", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MyCardChangeSohwCardStatus(ByVal TradeSeq As String) As Integer
            Dim results() As Object = Me.Invoke("MyCardChangeSohwCardStatus", New Object() {TradeSeq})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MyCardChangeSohwCardStatusAsync(ByVal TradeSeq As String)
            Me.MyCardChangeSohwCardStatusAsync(TradeSeq, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MyCardChangeSohwCardStatusAsync(ByVal TradeSeq As String, ByVal userState As Object)
            If (Me.MyCardChangeSohwCardStatusOperationCompleted Is Nothing) Then
                Me.MyCardChangeSohwCardStatusOperationCompleted = AddressOf Me.OnMyCardChangeSohwCardStatusOperationCompleted
            End If
            Me.InvokeAsync("MyCardChangeSohwCardStatus", New Object() {TradeSeq}, Me.MyCardChangeSohwCardStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnMyCardChangeSohwCardStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.MyCardChangeSohwCardStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MyCardChangeSohwCardStatusCompleted(Me, New MyCardChangeSohwCardStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MyCardCustIdAuthInsert", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MyCardCustIdAuthInsert(ByVal AuthCode As String, ByVal CustId As String, ByVal CreateIp As String) As Integer
            Dim results() As Object = Me.Invoke("MyCardCustIdAuthInsert", New Object() {AuthCode, CustId, CreateIp})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MyCardCustIdAuthInsertAsync(ByVal AuthCode As String, ByVal CustId As String, ByVal CreateIp As String)
            Me.MyCardCustIdAuthInsertAsync(AuthCode, CustId, CreateIp, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MyCardCustIdAuthInsertAsync(ByVal AuthCode As String, ByVal CustId As String, ByVal CreateIp As String, ByVal userState As Object)
            If (Me.MyCardCustIdAuthInsertOperationCompleted Is Nothing) Then
                Me.MyCardCustIdAuthInsertOperationCompleted = AddressOf Me.OnMyCardCustIdAuthInsertOperationCompleted
            End If
            Me.InvokeAsync("MyCardCustIdAuthInsert", New Object() {AuthCode, CustId, CreateIp}, Me.MyCardCustIdAuthInsertOperationCompleted, userState)
        End Sub
        
        Private Sub OnMyCardCustIdAuthInsertOperationCompleted(ByVal arg As Object)
            If (Not (Me.MyCardCustIdAuthInsertCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MyCardCustIdAuthInsertCompleted(Me, New MyCardCustIdAuthInsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MyCardCcardWhiteListInsert", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MyCardCcardWhiteListInsert(ByVal AuthCode1 As String, ByVal CustId As String) As Integer
            Dim results() As Object = Me.Invoke("MyCardCcardWhiteListInsert", New Object() {AuthCode1, CustId})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MyCardCcardWhiteListInsertAsync(ByVal AuthCode1 As String, ByVal CustId As String)
            Me.MyCardCcardWhiteListInsertAsync(AuthCode1, CustId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MyCardCcardWhiteListInsertAsync(ByVal AuthCode1 As String, ByVal CustId As String, ByVal userState As Object)
            If (Me.MyCardCcardWhiteListInsertOperationCompleted Is Nothing) Then
                Me.MyCardCcardWhiteListInsertOperationCompleted = AddressOf Me.OnMyCardCcardWhiteListInsertOperationCompleted
            End If
            Me.InvokeAsync("MyCardCcardWhiteListInsert", New Object() {AuthCode1, CustId}, Me.MyCardCcardWhiteListInsertOperationCompleted, userState)
        End Sub
        
        Private Sub OnMyCardCcardWhiteListInsertOperationCompleted(ByVal arg As Object)
            If (Not (Me.MyCardCcardWhiteListInsertCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MyCardCcardWhiteListInsertCompleted(Me, New MyCardCcardWhiteListInsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MyCardQuerySaveGameCard", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MyCardQuerySaveGameCard(ByVal MyCardId As String) As MyCardQuerySaveGameCardResult
            Dim results() As Object = Me.Invoke("MyCardQuerySaveGameCard", New Object() {MyCardId})
            Return CType(results(0),MyCardQuerySaveGameCardResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MyCardQuerySaveGameCardAsync(ByVal MyCardId As String)
            Me.MyCardQuerySaveGameCardAsync(MyCardId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MyCardQuerySaveGameCardAsync(ByVal MyCardId As String, ByVal userState As Object)
            If (Me.MyCardQuerySaveGameCardOperationCompleted Is Nothing) Then
                Me.MyCardQuerySaveGameCardOperationCompleted = AddressOf Me.OnMyCardQuerySaveGameCardOperationCompleted
            End If
            Me.InvokeAsync("MyCardQuerySaveGameCard", New Object() {MyCardId}, Me.MyCardQuerySaveGameCardOperationCompleted, userState)
        End Sub
        
        Private Sub OnMyCardQuerySaveGameCardOperationCompleted(ByVal arg As Object)
            If (Not (Me.MyCardQuerySaveGameCardCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MyCardQuerySaveGameCardCompleted(Me, New MyCardQuerySaveGameCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckBankProductSn", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CheckBankProductSn(ByVal FactoryID As Integer, ByVal BankProductSn As Integer) As Integer
            Dim results() As Object = Me.Invoke("CheckBankProductSn", New Object() {FactoryID, BankProductSn})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CheckBankProductSnAsync(ByVal FactoryID As Integer, ByVal BankProductSn As Integer)
            Me.CheckBankProductSnAsync(FactoryID, BankProductSn, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CheckBankProductSnAsync(ByVal FactoryID As Integer, ByVal BankProductSn As Integer, ByVal userState As Object)
            If (Me.CheckBankProductSnOperationCompleted Is Nothing) Then
                Me.CheckBankProductSnOperationCompleted = AddressOf Me.OnCheckBankProductSnOperationCompleted
            End If
            Me.InvokeAsync("CheckBankProductSn", New Object() {FactoryID, BankProductSn}, Me.CheckBankProductSnOperationCompleted, userState)
        End Sub
        
        Private Sub OnCheckBankProductSnOperationCompleted(ByVal arg As Object)
            If (Not (Me.CheckBankProductSnCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CheckBankProductSnCompleted(Me, New CheckBankProductSnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MyCardGetAnn", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MyCardGetAnn(ByVal AnnType As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("MyCardGetAnn", New Object() {AnnType})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MyCardGetAnnAsync(ByVal AnnType As String)
            Me.MyCardGetAnnAsync(AnnType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MyCardGetAnnAsync(ByVal AnnType As String, ByVal userState As Object)
            If (Me.MyCardGetAnnOperationCompleted Is Nothing) Then
                Me.MyCardGetAnnOperationCompleted = AddressOf Me.OnMyCardGetAnnOperationCompleted
            End If
            Me.InvokeAsync("MyCardGetAnn", New Object() {AnnType}, Me.MyCardGetAnnOperationCompleted, userState)
        End Sub
        
        Private Sub OnMyCardGetAnnOperationCompleted(ByVal arg As Object)
            If (Not (Me.MyCardGetAnnCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MyCardGetAnnCompleted(Me, New MyCardGetAnnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QuestionInsertData", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function QuestionInsertData(ByVal Seq As String, ByVal Category As String, ByVal CustName As String, ByVal Tel As String, ByVal bankfactory As String, ByVal Cust_Id As String, ByVal FreeCardId As String, ByVal CustId As String, ByVal Email As String, ByVal TradeDate As String, ByVal Question As String, ByVal Status As String, ByVal Unit1_id As String, ByVal Unit2_id As String) As String
            Dim results() As Object = Me.Invoke("QuestionInsertData", New Object() {Seq, Category, CustName, Tel, bankfactory, Cust_Id, FreeCardId, CustId, Email, TradeDate, Question, Status, Unit1_id, Unit2_id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub QuestionInsertDataAsync(ByVal Seq As String, ByVal Category As String, ByVal CustName As String, ByVal Tel As String, ByVal bankfactory As String, ByVal Cust_Id As String, ByVal FreeCardId As String, ByVal CustId As String, ByVal Email As String, ByVal TradeDate As String, ByVal Question As String, ByVal Status As String, ByVal Unit1_id As String, ByVal Unit2_id As String)
            Me.QuestionInsertDataAsync(Seq, Category, CustName, Tel, bankfactory, Cust_Id, FreeCardId, CustId, Email, TradeDate, Question, Status, Unit1_id, Unit2_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub QuestionInsertDataAsync(ByVal Seq As String, ByVal Category As String, ByVal CustName As String, ByVal Tel As String, ByVal bankfactory As String, ByVal Cust_Id As String, ByVal FreeCardId As String, ByVal CustId As String, ByVal Email As String, ByVal TradeDate As String, ByVal Question As String, ByVal Status As String, ByVal Unit1_id As String, ByVal Unit2_id As String, ByVal userState As Object)
            If (Me.QuestionInsertDataOperationCompleted Is Nothing) Then
                Me.QuestionInsertDataOperationCompleted = AddressOf Me.OnQuestionInsertDataOperationCompleted
            End If
            Me.InvokeAsync("QuestionInsertData", New Object() {Seq, Category, CustName, Tel, bankfactory, Cust_Id, FreeCardId, CustId, Email, TradeDate, Question, Status, Unit1_id, Unit2_id}, Me.QuestionInsertDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnQuestionInsertDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.QuestionInsertDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent QuestionInsertDataCompleted(Me, New QuestionInsertDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Md5", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Md5(ByVal input As String) As String
            Dim results() As Object = Me.Invoke("Md5", New Object() {input})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Md5Async(ByVal input As String)
            Me.Md5Async(input, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Md5Async(ByVal input As String, ByVal userState As Object)
            If (Me.Md5OperationCompleted Is Nothing) Then
                Me.Md5OperationCompleted = AddressOf Me.OnMd5OperationCompleted
            End If
            Me.InvokeAsync("Md5", New Object() {input}, Me.Md5OperationCompleted, userState)
        End Sub
        
        Private Sub OnMd5OperationCompleted(ByVal arg As Object)
            If (Not (Me.Md5CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Md5Completed(Me, New Md5CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MyCardTradeQuery", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MyCardTradeQuery(ByVal TradeDate As Date, ByVal CustId As String, ByVal BankFactorySn As Integer, ByVal Email As String) As MyCardTradeQueryResult
            Dim results() As Object = Me.Invoke("MyCardTradeQuery", New Object() {TradeDate, CustId, BankFactorySn, Email})
            Return CType(results(0),MyCardTradeQueryResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MyCardTradeQueryAsync(ByVal TradeDate As Date, ByVal CustId As String, ByVal BankFactorySn As Integer, ByVal Email As String)
            Me.MyCardTradeQueryAsync(TradeDate, CustId, BankFactorySn, Email, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MyCardTradeQueryAsync(ByVal TradeDate As Date, ByVal CustId As String, ByVal BankFactorySn As Integer, ByVal Email As String, ByVal userState As Object)
            If (Me.MyCardTradeQueryOperationCompleted Is Nothing) Then
                Me.MyCardTradeQueryOperationCompleted = AddressOf Me.OnMyCardTradeQueryOperationCompleted
            End If
            Me.InvokeAsync("MyCardTradeQuery", New Object() {TradeDate, CustId, BankFactorySn, Email}, Me.MyCardTradeQueryOperationCompleted, userState)
        End Sub
        
        Private Sub OnMyCardTradeQueryOperationCompleted(ByVal arg As Object)
            If (Not (Me.MyCardTradeQueryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MyCardTradeQueryCompleted(Me, New MyCardTradeQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StorePoints_ErrorLog_Insert", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function StorePoints_ErrorLog_Insert(ByVal StatCode As String, ByVal Termino As String, ByVal TerminoStatus As String, ByVal Business As String, ByVal CardNo As String, ByVal ProductCode As String, ByVal Itemkey As String, ByVal ItemkeyStatus As String, ByVal ItemkeyDescription As String, ByVal CreateIp As String) As Integer
            Dim results() As Object = Me.Invoke("StorePoints_ErrorLog_Insert", New Object() {StatCode, Termino, TerminoStatus, Business, CardNo, ProductCode, Itemkey, ItemkeyStatus, ItemkeyDescription, CreateIp})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub StorePoints_ErrorLog_InsertAsync(ByVal StatCode As String, ByVal Termino As String, ByVal TerminoStatus As String, ByVal Business As String, ByVal CardNo As String, ByVal ProductCode As String, ByVal Itemkey As String, ByVal ItemkeyStatus As String, ByVal ItemkeyDescription As String, ByVal CreateIp As String)
            Me.StorePoints_ErrorLog_InsertAsync(StatCode, Termino, TerminoStatus, Business, CardNo, ProductCode, Itemkey, ItemkeyStatus, ItemkeyDescription, CreateIp, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub StorePoints_ErrorLog_InsertAsync(ByVal StatCode As String, ByVal Termino As String, ByVal TerminoStatus As String, ByVal Business As String, ByVal CardNo As String, ByVal ProductCode As String, ByVal Itemkey As String, ByVal ItemkeyStatus As String, ByVal ItemkeyDescription As String, ByVal CreateIp As String, ByVal userState As Object)
            If (Me.StorePoints_ErrorLog_InsertOperationCompleted Is Nothing) Then
                Me.StorePoints_ErrorLog_InsertOperationCompleted = AddressOf Me.OnStorePoints_ErrorLog_InsertOperationCompleted
            End If
            Me.InvokeAsync("StorePoints_ErrorLog_Insert", New Object() {StatCode, Termino, TerminoStatus, Business, CardNo, ProductCode, Itemkey, ItemkeyStatus, ItemkeyDescription, CreateIp}, Me.StorePoints_ErrorLog_InsertOperationCompleted, userState)
        End Sub
        
        Private Sub OnStorePoints_ErrorLog_InsertOperationCompleted(ByVal arg As Object)
            If (Not (Me.StorePoints_ErrorLog_InsertCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent StorePoints_ErrorLog_InsertCompleted(Me, New StorePoints_ErrorLog_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/atmtradeUpdate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function atmtradeUpdate(ByVal AtmTradeSn As Integer, ByVal BankAccountNo As String) As atmtradeUpdateRE
            Dim results() As Object = Me.Invoke("atmtradeUpdate", New Object() {AtmTradeSn, BankAccountNo})
            Return CType(results(0),atmtradeUpdateRE)
        End Function
        
        '''<remarks/>
        Public Overloads Sub atmtradeUpdateAsync(ByVal AtmTradeSn As Integer, ByVal BankAccountNo As String)
            Me.atmtradeUpdateAsync(AtmTradeSn, BankAccountNo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub atmtradeUpdateAsync(ByVal AtmTradeSn As Integer, ByVal BankAccountNo As String, ByVal userState As Object)
            If (Me.atmtradeUpdateOperationCompleted Is Nothing) Then
                Me.atmtradeUpdateOperationCompleted = AddressOf Me.OnatmtradeUpdateOperationCompleted
            End If
            Me.InvokeAsync("atmtradeUpdate", New Object() {AtmTradeSn, BankAccountNo}, Me.atmtradeUpdateOperationCompleted, userState)
        End Sub
        
        Private Sub OnatmtradeUpdateOperationCompleted(ByVal arg As Object)
            If (Not (Me.atmtradeUpdateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent atmtradeUpdateCompleted(Me, New atmtradeUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAtmSn", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAtmSn(ByVal Classtype As Integer, ByVal Amount As Integer) As Integer
            Dim results() As Object = Me.Invoke("GetAtmSn", New Object() {Classtype, Amount})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAtmSnAsync(ByVal Classtype As Integer, ByVal Amount As Integer)
            Me.GetAtmSnAsync(Classtype, Amount, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAtmSnAsync(ByVal Classtype As Integer, ByVal Amount As Integer, ByVal userState As Object)
            If (Me.GetAtmSnOperationCompleted Is Nothing) Then
                Me.GetAtmSnOperationCompleted = AddressOf Me.OnGetAtmSnOperationCompleted
            End If
            Me.InvokeAsync("GetAtmSn", New Object() {Classtype, Amount}, Me.GetAtmSnOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAtmSnOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAtmSnCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAtmSnCompleted(Me, New GetAtmSnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAtmSnBilling", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAtmSnBilling(ByVal Classtype As Integer, ByVal Amount As Integer) As Integer
            Dim results() As Object = Me.Invoke("GetAtmSnBilling", New Object() {Classtype, Amount})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAtmSnBillingAsync(ByVal Classtype As Integer, ByVal Amount As Integer)
            Me.GetAtmSnBillingAsync(Classtype, Amount, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAtmSnBillingAsync(ByVal Classtype As Integer, ByVal Amount As Integer, ByVal userState As Object)
            If (Me.GetAtmSnBillingOperationCompleted Is Nothing) Then
                Me.GetAtmSnBillingOperationCompleted = AddressOf Me.OnGetAtmSnBillingOperationCompleted
            End If
            Me.InvokeAsync("GetAtmSnBilling", New Object() {Classtype, Amount}, Me.GetAtmSnBillingOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAtmSnBillingOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAtmSnBillingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAtmSnBillingCompleted(Me, New GetAtmSnBillingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAtmAccnoForFubon", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAtmAccnoForFubon(ByVal Classtype As Integer, ByVal Amount As Integer) As GetAtmAccnoResult
            Dim results() As Object = Me.Invoke("GetAtmAccnoForFubon", New Object() {Classtype, Amount})
            Return CType(results(0),GetAtmAccnoResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAtmAccnoForFubonAsync(ByVal Classtype As Integer, ByVal Amount As Integer)
            Me.GetAtmAccnoForFubonAsync(Classtype, Amount, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAtmAccnoForFubonAsync(ByVal Classtype As Integer, ByVal Amount As Integer, ByVal userState As Object)
            If (Me.GetAtmAccnoForFubonOperationCompleted Is Nothing) Then
                Me.GetAtmAccnoForFubonOperationCompleted = AddressOf Me.OnGetAtmAccnoForFubonOperationCompleted
            End If
            Me.InvokeAsync("GetAtmAccnoForFubon", New Object() {Classtype, Amount}, Me.GetAtmAccnoForFubonOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAtmAccnoForFubonOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAtmAccnoForFubonCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAtmAccnoForFubonCompleted(Me, New GetAtmAccnoForFubonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAtmAccnoForFubonBilling", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAtmAccnoForFubonBilling(ByVal Classtype As Integer, ByVal Amount As Integer) As GetAtmAccnoResult
            Dim results() As Object = Me.Invoke("GetAtmAccnoForFubonBilling", New Object() {Classtype, Amount})
            Return CType(results(0),GetAtmAccnoResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAtmAccnoForFubonBillingAsync(ByVal Classtype As Integer, ByVal Amount As Integer)
            Me.GetAtmAccnoForFubonBillingAsync(Classtype, Amount, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAtmAccnoForFubonBillingAsync(ByVal Classtype As Integer, ByVal Amount As Integer, ByVal userState As Object)
            If (Me.GetAtmAccnoForFubonBillingOperationCompleted Is Nothing) Then
                Me.GetAtmAccnoForFubonBillingOperationCompleted = AddressOf Me.OnGetAtmAccnoForFubonBillingOperationCompleted
            End If
            Me.InvokeAsync("GetAtmAccnoForFubonBilling", New Object() {Classtype, Amount}, Me.GetAtmAccnoForFubonBillingOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAtmAccnoForFubonBillingOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAtmAccnoForFubonBillingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAtmAccnoForFubonBillingCompleted(Me, New GetAtmAccnoForFubonBillingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAtmAccnoForPostWebAtm", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAtmAccnoForPostWebAtm(ByVal Classtype As Integer, ByVal Amount As Integer) As GetAtmAccnoResult
            Dim results() As Object = Me.Invoke("GetAtmAccnoForPostWebAtm", New Object() {Classtype, Amount})
            Return CType(results(0),GetAtmAccnoResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAtmAccnoForPostWebAtmAsync(ByVal Classtype As Integer, ByVal Amount As Integer)
            Me.GetAtmAccnoForPostWebAtmAsync(Classtype, Amount, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAtmAccnoForPostWebAtmAsync(ByVal Classtype As Integer, ByVal Amount As Integer, ByVal userState As Object)
            If (Me.GetAtmAccnoForPostWebAtmOperationCompleted Is Nothing) Then
                Me.GetAtmAccnoForPostWebAtmOperationCompleted = AddressOf Me.OnGetAtmAccnoForPostWebAtmOperationCompleted
            End If
            Me.InvokeAsync("GetAtmAccnoForPostWebAtm", New Object() {Classtype, Amount}, Me.GetAtmAccnoForPostWebAtmOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAtmAccnoForPostWebAtmOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAtmAccnoForPostWebAtmCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAtmAccnoForPostWebAtmCompleted(Me, New GetAtmAccnoForPostWebAtmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAtmAccnoForPostWebAtmBilling", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAtmAccnoForPostWebAtmBilling(ByVal Classtype As Integer, ByVal Amount As Integer) As GetAtmAccnoResult
            Dim results() As Object = Me.Invoke("GetAtmAccnoForPostWebAtmBilling", New Object() {Classtype, Amount})
            Return CType(results(0),GetAtmAccnoResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAtmAccnoForPostWebAtmBillingAsync(ByVal Classtype As Integer, ByVal Amount As Integer)
            Me.GetAtmAccnoForPostWebAtmBillingAsync(Classtype, Amount, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAtmAccnoForPostWebAtmBillingAsync(ByVal Classtype As Integer, ByVal Amount As Integer, ByVal userState As Object)
            If (Me.GetAtmAccnoForPostWebAtmBillingOperationCompleted Is Nothing) Then
                Me.GetAtmAccnoForPostWebAtmBillingOperationCompleted = AddressOf Me.OnGetAtmAccnoForPostWebAtmBillingOperationCompleted
            End If
            Me.InvokeAsync("GetAtmAccnoForPostWebAtmBilling", New Object() {Classtype, Amount}, Me.GetAtmAccnoForPostWebAtmBillingOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAtmAccnoForPostWebAtmBillingOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAtmAccnoForPostWebAtmBillingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAtmAccnoForPostWebAtmBillingCompleted(Me, New GetAtmAccnoForPostWebAtmBillingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCardPriceForShangHai", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCardPriceForShangHai(ByVal BankProductSn As String) As String
            Dim results() As Object = Me.Invoke("GetCardPriceForShangHai", New Object() {BankProductSn})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCardPriceForShangHaiAsync(ByVal BankProductSn As String)
            Me.GetCardPriceForShangHaiAsync(BankProductSn, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCardPriceForShangHaiAsync(ByVal BankProductSn As String, ByVal userState As Object)
            If (Me.GetCardPriceForShangHaiOperationCompleted Is Nothing) Then
                Me.GetCardPriceForShangHaiOperationCompleted = AddressOf Me.OnGetCardPriceForShangHaiOperationCompleted
            End If
            Me.InvokeAsync("GetCardPriceForShangHai", New Object() {BankProductSn}, Me.GetCardPriceForShangHaiOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCardPriceForShangHaiOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCardPriceForShangHaiCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCardPriceForShangHaiCompleted(Me, New GetCardPriceForShangHaiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAtmAccnoForShangHai", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAtmAccnoForShangHai(ByVal Classtype As Integer, ByVal Amount As Integer, ByVal Price As String) As GetAtmAccnoResult
            Dim results() As Object = Me.Invoke("GetAtmAccnoForShangHai", New Object() {Classtype, Amount, Price})
            Return CType(results(0),GetAtmAccnoResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAtmAccnoForShangHaiAsync(ByVal Classtype As Integer, ByVal Amount As Integer, ByVal Price As String)
            Me.GetAtmAccnoForShangHaiAsync(Classtype, Amount, Price, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAtmAccnoForShangHaiAsync(ByVal Classtype As Integer, ByVal Amount As Integer, ByVal Price As String, ByVal userState As Object)
            If (Me.GetAtmAccnoForShangHaiOperationCompleted Is Nothing) Then
                Me.GetAtmAccnoForShangHaiOperationCompleted = AddressOf Me.OnGetAtmAccnoForShangHaiOperationCompleted
            End If
            Me.InvokeAsync("GetAtmAccnoForShangHai", New Object() {Classtype, Amount, Price}, Me.GetAtmAccnoForShangHaiOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAtmAccnoForShangHaiOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAtmAccnoForShangHaiCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAtmAccnoForShangHaiCompleted(Me, New GetAtmAccnoForShangHaiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class GetAtmAccnoResult
        
        Private atmsnField As Integer
        
        Private atmAccnoField As String
        
        '''<remarks/>
        Public Property Atmsn() As Integer
            Get
                Return Me.atmsnField
            End Get
            Set
                Me.atmsnField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AtmAccno() As String
            Get
                Return Me.atmAccnoField
            End Get
            Set
                Me.atmAccnoField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class atmtradeUpdateRE
        
        Private returnMsgNoField As Integer
        
        Private returnMsgField As String
        
        '''<remarks/>
        Public Property ReturnMsgNo() As Integer
            Get
                Return Me.returnMsgNoField
            End Get
            Set
                Me.returnMsgNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReturnMsg() As String
            Get
                Return Me.returnMsgField
            End Get
            Set
                Me.returnMsgField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class MyCardTradeQueryResult
        
        Private returnMsgNoField As Integer
        
        Private returnDatasetField As System.Data.DataSet
        
        '''<remarks/>
        Public Property ReturnMsgNo() As Integer
            Get
                Return Me.returnMsgNoField
            End Get
            Set
                Me.returnMsgNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReturnDataset() As System.Data.DataSet
            Get
                Return Me.returnDatasetField
            End Get
            Set
                Me.returnDatasetField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class MyCardQuerySaveGameCardResult
        
        Private returnDataField As System.Data.DataSet
        
        Private returnMsgNoField As Integer
        
        Private returnMsgField As String
        
        '''<remarks/>
        Public Property ReturnData() As System.Data.DataSet
            Get
                Return Me.returnDataField
            End Get
            Set
                Me.returnDataField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReturnMsgNo() As Integer
            Get
                Return Me.returnMsgNoField
            End Get
            Set
                Me.returnMsgNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReturnMsg() As String
            Get
                Return Me.returnMsgField
            End Get
            Set
                Me.returnMsgField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class GetCPFactoryReturnUrlResult
        
        Private returnMsgNoField As Integer
        
        Private returnUrlField As String
        
        Private returnFactorySeqField As String
        
        '''<remarks/>
        Public Property ReturnMsgNo() As Integer
            Get
                Return Me.returnMsgNoField
            End Get
            Set
                Me.returnMsgNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReturnUrl() As String
            Get
                Return Me.returnUrlField
            End Get
            Set
                Me.returnUrlField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReturnFactorySeq() As String
            Get
                Return Me.returnFactorySeqField
            End Get
            Set
                Me.returnFactorySeqField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class CPTradeListRenderResultForAtm
        
        Private returnMsgNoField As Integer
        
        '''<remarks/>
        Public Property ReturnMsgNo() As Integer
            Get
                Return Me.returnMsgNoField
            End Get
            Set
                Me.returnMsgNoField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class CPTradeListRenderResult
        
        Private returnMsgNoField As Integer
        
        Private returnUrlField As String
        
        Private returnFactorySeqField As String
        
        '''<remarks/>
        Public Property ReturnMsgNo() As Integer
            Get
                Return Me.returnMsgNoField
            End Get
            Set
                Me.returnMsgNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReturnUrl() As String
            Get
                Return Me.returnUrlField
            End Get
            Set
                Me.returnUrlField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReturnFactorySeq() As String
            Get
                Return Me.returnFactorySeqField
            End Get
            Set
                Me.returnFactorySeqField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class CPTradeListInsertResult
        
        Private returnMsgNoField As Integer
        
        Private tradeSeqField As String
        
        Private tradePriceField As Integer
        
        Private serviceNameField As String
        
        Private paymentServiceIdField As String
        
        '''<remarks/>
        Public Property ReturnMsgNo() As Integer
            Get
                Return Me.returnMsgNoField
            End Get
            Set
                Me.returnMsgNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TradeSeq() As String
            Get
                Return Me.tradeSeqField
            End Get
            Set
                Me.tradeSeqField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TradePrice() As Integer
            Get
                Return Me.tradePriceField
            End Get
            Set
                Me.tradePriceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ServiceName() As String
            Get
                Return Me.serviceNameField
            End Get
            Set
                Me.serviceNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PaymentServiceId() As String
            Get
                Return Me.paymentServiceIdField
            End Get
            Set
                Me.paymentServiceIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class CheckTempCodeResult
        
        Private returnMsgNoField As Integer
        
        Private paymentIdField As String
        
        Private returnUrlField As String
        
        Private returnFactoryMasterPageNameField As String
        
        Private returnFactoryThemeNameField As String
        
        Private returnFactorySeqField As String
        
        '''<remarks/>
        Public Property ReturnMsgNo() As Integer
            Get
                Return Me.returnMsgNoField
            End Get
            Set
                Me.returnMsgNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PaymentId() As String
            Get
                Return Me.paymentIdField
            End Get
            Set
                Me.paymentIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReturnUrl() As String
            Get
                Return Me.returnUrlField
            End Get
            Set
                Me.returnUrlField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReturnFactoryMasterPageName() As String
            Get
                Return Me.returnFactoryMasterPageNameField
            End Get
            Set
                Me.returnFactoryMasterPageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReturnFactoryThemeName() As String
            Get
                Return Me.returnFactoryThemeNameField
            End Get
            Set
                Me.returnFactoryThemeNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReturnFactorySeq() As String
            Get
                Return Me.returnFactorySeqField
            End Get
            Set
                Me.returnFactorySeqField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class SaveResult
        
        Private returnnoField As Integer
        
        Private tradeSeqField As String
        
        Private cardGroupField As String
        
        Private returnmsgField As String
        
        '''<remarks/>
        Public Property returnno() As Integer
            Get
                Return Me.returnnoField
            End Get
            Set
                Me.returnnoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TradeSeq() As String
            Get
                Return Me.tradeSeqField
            End Get
            Set
                Me.tradeSeqField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CardGroup() As String
            Get
                Return Me.cardGroupField
            End Get
            Set
                Me.cardGroupField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property returnmsg() As String
            Get
                Return Me.returnmsgField
            End Get
            Set
                Me.returnmsgField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class MyCardBlackCustIdResult
        
        Private returnMsgNoField As Integer
        
        Private returnMsgField As String
        
        '''<remarks/>
        Public Property ReturnMsgNo() As Integer
            Get
                Return Me.returnMsgNoField
            End Get
            Set
                Me.returnMsgNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReturnMsg() As String
            Get
                Return Me.returnMsgField
            End Get
            Set
                Me.returnMsgField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class InsertBlackIpResult
        
        Private returnMsgNoField As Integer
        
        Private returnMsgField As String
        
        '''<remarks/>
        Public Property ReturnMsgNo() As Integer
            Get
                Return Me.returnMsgNoField
            End Get
            Set
                Me.returnMsgNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReturnMsg() As String
            Get
                Return Me.returnMsgField
            End Get
            Set
                Me.returnMsgField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class CheckBlackIpResult
        
        Private returnMsgNoField As Integer
        
        Private returnMsgField As String
        
        '''<remarks/>
        Public Property ReturnMsgNo() As Integer
            Get
                Return Me.returnMsgNoField
            End Get
            Set
                Me.returnMsgNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReturnMsg() As String
            Get
                Return Me.returnMsgField
            End Get
            Set
                Me.returnMsgField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class GetAtmAccnoForTSResult
        
        Private atmsnField As String
        
        Private atmAccnoField As String
        
        '''<remarks/>
        Public Property Atmsn() As String
            Get
                Return Me.atmsnField
            End Get
            Set
                Me.atmsnField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AtmAccno() As String
            Get
                Return Me.atmAccnoField
            End Get
            Set
                Me.atmAccnoField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class MyCardSendSmsResult
        
        Private returnNoField As Integer
        
        Private buyCustMobileField As String
        
        Private tempCodeField As String
        
        '''<remarks/>
        Public Property ReturnNo() As Integer
            Get
                Return Me.returnNoField
            End Get
            Set
                Me.returnNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BuyCustMobile() As String
            Get
                Return Me.buyCustMobileField
            End Get
            Set
                Me.buyCustMobileField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TempCode() As String
            Get
                Return Me.tempCodeField
            End Get
            Set
                Me.tempCodeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class FreecardSendSmsResult
        
        Private freecardSendSmsSnField As Integer
        
        Private freecardSendSmsMsgField As String
        
        '''<remarks/>
        Public Property FreecardSendSmsSn() As Integer
            Get
                Return Me.freecardSendSmsSnField
            End Get
            Set
                Me.freecardSendSmsSnField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FreecardSendSmsMsg() As String
            Get
                Return Me.freecardSendSmsMsgField
            End Get
            Set
                Me.freecardSendSmsMsgField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class CheckCardResult
        
        Private checkResultField As Boolean
        
        Private returnMsgField As String
        
        '''<remarks/>
        Public Property CheckResult() As Boolean
            Get
                Return Me.checkResultField
            End Get
            Set
                Me.checkResultField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReturnMsg() As String
            Get
                Return Me.returnMsgField
            End Get
            Set
                Me.returnMsgField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class GetCardResult
        
        Private returnNoField As Integer
        
        Private returnMsgField As String
        
        Private cardNumField As String
        
        '''<remarks/>
        Public Property ReturnNo() As Integer
            Get
                Return Me.returnNoField
            End Get
            Set
                Me.returnNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReturnMsg() As String
            Get
                Return Me.returnMsgField
            End Get
            Set
                Me.returnMsgField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CardNum() As String
            Get
                Return Me.cardNumField
            End Get
            Set
                Me.cardNumField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class basicResult
        
        Private returnMsgNoField As Integer
        
        Private returnMsgField As String
        
        '''<remarks/>
        Public Property ReturnMsgNo() As Integer
            Get
                Return Me.returnMsgNoField
            End Get
            Set
                Me.returnMsgNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReturnMsg() As String
            Get
                Return Me.returnMsgField
            End Get
            Set
                Me.returnMsgField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class SellTradeResult
        
        Private tradeSeqField As String
        
        Private returnNoField As Integer
        
        Private tempcodeField As String
        
        Private tradePriceField As Integer
        
        Private bankProductSnField As String
        
        '''<remarks/>
        Public Property TradeSeq() As String
            Get
                Return Me.tradeSeqField
            End Get
            Set
                Me.tradeSeqField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReturnNo() As Integer
            Get
                Return Me.returnNoField
            End Get
            Set
                Me.returnNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Tempcode() As String
            Get
                Return Me.tempcodeField
            End Get
            Set
                Me.tempcodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TradePrice() As Integer
            Get
                Return Me.tradePriceField
            End Get
            Set
                Me.tradePriceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BankProductSn() As String
            Get
                Return Me.bankProductSnField
            End Get
            Set
                Me.bankProductSnField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class MyCardOnlinePaySellTradeListUpdateTradeCodeRE
        
        Private returnMsgNoField As Integer
        
        Private returnMsgField As String
        
        '''<remarks/>
        Public Property ReturnMsgNo() As Integer
            Get
                Return Me.returnMsgNoField
            End Get
            Set
                Me.returnMsgNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReturnMsg() As String
            Get
                Return Me.returnMsgField
            End Get
            Set
                Me.returnMsgField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class MyCardOnlinePaySellTradeListGetTradeCodeRE
        
        Private returnMsgNoField As Integer
        
        Private returnMsgField As String
        
        '''<remarks/>
        Public Property ReturnMsgNo() As Integer
            Get
                Return Me.returnMsgNoField
            End Get
            Set
                Me.returnMsgNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReturnMsg() As String
            Get
                Return Me.returnMsgField
            End Get
            Set
                Me.returnMsgField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class BillatmtradeUpdateRE
        
        Private returnMsgNoField As Integer
        
        Private returnMsgField As String
        
        '''<remarks/>
        Public Property ReturnMsgNo() As Integer
            Get
                Return Me.returnMsgNoField
            End Get
            Set
                Me.returnMsgNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReturnMsg() As String
            Get
                Return Me.returnMsgField
            End Get
            Set
                Me.returnMsgField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum CommandType
        
        '''<remarks/>
        Text
        
        '''<remarks/>
        StoredProcedure
        
        '''<remarks/>
        TableDirect
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetAtmAccnoForShangHaiBillingCompletedEventHandler(ByVal sender As Object, ByVal e As GetAtmAccnoForShangHaiBillingCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAtmAccnoForShangHaiBillingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As GetAtmAccnoResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GetAtmAccnoResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GenCheckCodeForShangHaiCompletedEventHandler(ByVal sender As Object, ByVal e As GenCheckCodeForShangHaiCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GenCheckCodeForShangHaiCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetCardPriceForAcqCompletedEventHandler(ByVal sender As Object, ByVal e As GetCardPriceForAcqCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCardPriceForAcqCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetAtmAccnoForAcqCompletedEventHandler(ByVal sender As Object, ByVal e As GetAtmAccnoForAcqCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAtmAccnoForAcqCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As GetAtmAccnoResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GetAtmAccnoResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GenCheckCodeForAcqCompletedEventHandler(ByVal sender As Object, ByVal e As GenCheckCodeForAcqCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GenCheckCodeForAcqCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub BillatmtradeUpdateCompletedEventHandler(ByVal sender As Object, ByVal e As BillatmtradeUpdateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BillatmtradeUpdateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As BillatmtradeUpdateRE
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),BillatmtradeUpdateRE)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub MyCardOnlinePaySellTradeListGetTradeCodeCompletedEventHandler(ByVal sender As Object, ByVal e As MyCardOnlinePaySellTradeListGetTradeCodeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MyCardOnlinePaySellTradeListGetTradeCodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As MyCardOnlinePaySellTradeListGetTradeCodeRE
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),MyCardOnlinePaySellTradeListGetTradeCodeRE)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub MyCardOnlinePaySellTradeListUpdateTradeCodeCompletedEventHandler(ByVal sender As Object, ByVal e As MyCardOnlinePaySellTradeListUpdateTradeCodeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MyCardOnlinePaySellTradeListUpdateTradeCodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As MyCardOnlinePaySellTradeListUpdateTradeCodeRE
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),MyCardOnlinePaySellTradeListUpdateTradeCodeRE)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub OnlinePay_SellTradeListInsert_USDCompletedEventHandler(ByVal sender As Object, ByVal e As OnlinePay_SellTradeListInsert_USDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OnlinePay_SellTradeListInsert_USDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SellTradeResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SellTradeResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub chkLimit_USDCompletedEventHandler(ByVal sender As Object, ByVal e As chkLimit_USDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class chkLimit_USDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetFreecardMicroView1CompletedEventHandler(ByVal sender As Object, ByVal e As GetFreecardMicroView1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFreecardMicroView1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub TextServiceCompletedEventHandler(ByVal sender As Object, ByVal e As TextServiceCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TextServiceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As basicResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),basicResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetCardNameForMyCardCompletedEventHandler(ByVal sender As Object, ByVal e As GetCardNameForMyCardCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCardNameForMyCardCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetCardGameTypeForMyCardCompletedEventHandler(ByVal sender As Object, ByVal e As GetCardGameTypeForMyCardCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCardGameTypeForMyCardCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetBankFactoryGroupForMyCardCompletedEventHandler(ByVal sender As Object, ByVal e As GetBankFactoryGroupForMyCardCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBankFactoryGroupForMyCardCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetBankFactoryForMyCardCompletedEventHandler(ByVal sender As Object, ByVal e As GetBankFactoryForMyCardCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBankFactoryForMyCardCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetBankFactoryPathCompletedEventHandler(ByVal sender As Object, ByVal e As GetBankFactoryPathCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBankFactoryPathCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GenMyCardErrorMsgCompletedEventHandler(ByVal sender As Object, ByVal e As GenMyCardErrorMsgCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GenMyCardErrorMsgCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub ChkFreeCardCountCompletedEventHandler(ByVal sender As Object, ByVal e As ChkFreeCardCountCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ChkFreeCardCountCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetMicroPaymentSeqCompletedEventHandler(ByVal sender As Object, ByVal e As GetMicroPaymentSeqCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMicroPaymentSeqCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub chkLimitCompletedEventHandler(ByVal sender As Object, ByVal e As chkLimitCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class chkLimitCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub MicropaymentChkCcardRoleCompletedEventHandler(ByVal sender As Object, ByVal e As MicropaymentChkCcardRoleCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MicropaymentChkCcardRoleCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub OnlinePay_SellTradeListInsertCompletedEventHandler(ByVal sender As Object, ByVal e As OnlinePay_SellTradeListInsertCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OnlinePay_SellTradeListInsertCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SellTradeResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SellTradeResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub MicroSellTradeRenderCompletedEventHandler(ByVal sender As Object, ByVal e As MicroSellTradeRenderCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MicroSellTradeRenderCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub MicroSellTradeRender2CompletedEventHandler(ByVal sender As Object, ByVal e As MicroSellTradeRender2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MicroSellTradeRender2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetCardCompletedEventHandler(ByVal sender As Object, ByVal e As GetCardCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCardCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As GetCardResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GetCardResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub preCheckMyCardForCardStoreCompletedEventHandler(ByVal sender As Object, ByVal e As preCheckMyCardForCardStoreCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class preCheckMyCardForCardStoreCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CheckCardResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CheckCardResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetCardPwdCompletedEventHandler(ByVal sender As Object, ByVal e As GetCardPwdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCardPwdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub FreecardSendSmsCompletedEventHandler(ByVal sender As Object, ByVal e As FreecardSendSmsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FreecardSendSmsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FreecardSendSmsResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FreecardSendSmsResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub MyCardSendSmsCompletedEventHandler(ByVal sender As Object, ByVal e As MyCardSendSmsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MyCardSendSmsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As MyCardSendSmsResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),MyCardSendSmsResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub MyCardCPSendSmsCompletedEventHandler(ByVal sender As Object, ByVal e As MyCardCPSendSmsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MyCardCPSendSmsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FreecardSendSmsResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FreecardSendSmsResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub TccSMSCompletedEventHandler(ByVal sender As Object, ByVal e As TccSMSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TccSMSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub TccSmsEplayCompletedEventHandler(ByVal sender As Object, ByVal e As TccSmsEplayCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TccSmsEplayCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetTccTimeStampCompletedEventHandler(ByVal sender As Object, ByVal e As GetTccTimeStampCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTccTimeStampCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub MyCardErrorLogCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub MyCardMicroPaymentSendCoinfirmMailCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetProdInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetProdInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetProdInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub InputInvoiceCompletedEventHandler(ByVal sender As Object, ByVal e As InputInvoiceCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InputInvoiceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub CheckCustIdCompletedEventHandler(ByVal sender As Object, ByVal e As CheckCustIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CheckCustIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub CheckTempCodeCompletedEventHandler(ByVal sender As Object, ByVal e As CheckTempCodeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CheckTempCodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub CheckCPTempCodeCompletedEventHandler(ByVal sender As Object, ByVal e As CheckCPTempCodeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CheckCPTempCodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetAtmAccnoCompletedEventHandler(ByVal sender As Object, ByVal e As GetAtmAccnoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAtmAccnoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As GetAtmAccnoResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GetAtmAccnoResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetAtmAccnoBillingCompletedEventHandler(ByVal sender As Object, ByVal e As GetAtmAccnoBillingCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAtmAccnoBillingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As GetAtmAccnoResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GetAtmAccnoResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetAtmAccnoForGCompletedEventHandler(ByVal sender As Object, ByVal e As GetAtmAccnoForGCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAtmAccnoForGCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As GetAtmAccnoResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GetAtmAccnoResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetAtmAccnoForEsunCompletedEventHandler(ByVal sender As Object, ByVal e As GetAtmAccnoForEsunCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAtmAccnoForEsunCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As GetAtmAccnoResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GetAtmAccnoResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetAtmAccnoForEsunBillingCompletedEventHandler(ByVal sender As Object, ByVal e As GetAtmAccnoForEsunBillingCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAtmAccnoForEsunBillingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As GetAtmAccnoResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GetAtmAccnoResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GenCheckCodeForESunCompletedEventHandler(ByVal sender As Object, ByVal e As GenCheckCodeForESunCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GenCheckCodeForESunCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetAtmAccnoForGfCompletedEventHandler(ByVal sender As Object, ByVal e As GetAtmAccnoForGfCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAtmAccnoForGfCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As GetAtmAccnoResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GetAtmAccnoResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetAtmAccnoForGfBillingCompletedEventHandler(ByVal sender As Object, ByVal e As GetAtmAccnoForGfBillingCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAtmAccnoForGfBillingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As GetAtmAccnoResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GetAtmAccnoResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetAtmAccnoForTSCompletedEventHandler(ByVal sender As Object, ByVal e As GetAtmAccnoForTSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAtmAccnoForTSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As GetAtmAccnoForTSResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GetAtmAccnoForTSResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetAtmAccnoForTSBillingCompletedEventHandler(ByVal sender As Object, ByVal e As GetAtmAccnoForTSBillingCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAtmAccnoForTSBillingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As GetAtmAccnoForTSResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GetAtmAccnoForTSResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetAtmAccnoForLandCompletedEventHandler(ByVal sender As Object, ByVal e As GetAtmAccnoForLandCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAtmAccnoForLandCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As GetAtmAccnoResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GetAtmAccnoResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GenCheckCodeForLandCompletedEventHandler(ByVal sender As Object, ByVal e As GenCheckCodeForLandCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GenCheckCodeForLandCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetCardPriceForLandCompletedEventHandler(ByVal sender As Object, ByVal e As GetCardPriceForLandCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCardPriceForLandCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetAtmAccnoForHuananCompletedEventHandler(ByVal sender As Object, ByVal e As GetAtmAccnoForHuananCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAtmAccnoForHuananCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As GetAtmAccnoResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GetAtmAccnoResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GenCheckCodeForHuananCompletedEventHandler(ByVal sender As Object, ByVal e As GenCheckCodeForHuananCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GenCheckCodeForHuananCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub CheckBlackIPCompletedEventHandler(ByVal sender As Object, ByVal e As CheckBlackIPCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CheckBlackIPCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CheckBlackIpResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CheckBlackIpResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub MyCardBlackIpInsertCompletedEventHandler(ByVal sender As Object, ByVal e As MyCardBlackIpInsertCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MyCardBlackIpInsertCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As InsertBlackIpResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),InsertBlackIpResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub MyCardBlackCustIdInsertCompletedEventHandler(ByVal sender As Object, ByVal e As MyCardBlackCustIdInsertCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MyCardBlackCustIdInsertCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As MyCardBlackCustIdResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),MyCardBlackCustIdResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub MyCardBlackCustIdRemoveCompletedEventHandler(ByVal sender As Object, ByVal e As MyCardBlackCustIdRemoveCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MyCardBlackCustIdRemoveCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As MyCardBlackCustIdResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),MyCardBlackCustIdResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub UpdateMyCardTradeInfoCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetMyCardSingleTradeInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetMyCardSingleTradeInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMyCardSingleTradeInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetMyCardSingleTradeInfoExCompletedEventHandler(ByVal sender As Object, ByVal e As GetMyCardSingleTradeInfoExCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMyCardSingleTradeInfoExCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub MyCardSaveListCompletedEventHandler(ByVal sender As Object, ByVal e As MyCardSaveListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MyCardSaveListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SaveResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SaveResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub MyCardSaveListSaveCardTypeCompletedEventHandler(ByVal sender As Object, ByVal e As MyCardSaveListSaveCardTypeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MyCardSaveListSaveCardTypeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub MyCardTakeInvoiceCompletedEventHandler(ByVal sender As Object, ByVal e As MyCardTakeInvoiceCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MyCardTakeInvoiceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetMyCardMultiTradeInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetMyCardMultiTradeInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMyCardMultiTradeInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetMyCardMultiTradeInfoExCompletedEventHandler(ByVal sender As Object, ByVal e As GetMyCardMultiTradeInfoExCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMyCardMultiTradeInfoExCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetMyCardMultiTradeInfoEx2CompletedEventHandler(ByVal sender As Object, ByVal e As GetMyCardMultiTradeInfoEx2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMyCardMultiTradeInfoEx2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetMyCardMultiTradeInfo14CompletedEventHandler(ByVal sender As Object, ByVal e As GetMyCardMultiTradeInfo14CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMyCardMultiTradeInfo14CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub MyCard_CPCheckTempCodeCompletedEventHandler(ByVal sender As Object, ByVal e As MyCard_CPCheckTempCodeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MyCard_CPCheckTempCodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CheckTempCodeResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CheckTempCodeResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub MyCard_CPTradeListInsertCompletedEventHandler(ByVal sender As Object, ByVal e As MyCard_CPTradeListInsertCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MyCard_CPTradeListInsertCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CPTradeListInsertResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CPTradeListInsertResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub MyCard_CPTradeListRenderCompletedEventHandler(ByVal sender As Object, ByVal e As MyCard_CPTradeListRenderCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MyCard_CPTradeListRenderCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CPTradeListRenderResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CPTradeListRenderResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub MyCard_CPTradeListRenderForAtmCompletedEventHandler(ByVal sender As Object, ByVal e As MyCard_CPTradeListRenderForAtmCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MyCard_CPTradeListRenderForAtmCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CPTradeListRenderResultForAtm
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CPTradeListRenderResultForAtm)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetCPBankFactoryPathCompletedEventHandler(ByVal sender As Object, ByVal e As GetCPBankFactoryPathCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCPBankFactoryPathCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetCPFactoryReturnUrlCompletedEventHandler(ByVal sender As Object, ByVal e As GetCPFactoryReturnUrlCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCPFactoryReturnUrlCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As GetCPFactoryReturnUrlResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GetCPFactoryReturnUrlResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub MyCardCheckFFCcardCompletedEventHandler(ByVal sender As Object, ByVal e As MyCardCheckFFCcardCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MyCardCheckFFCcardCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub MyCardChangeSohwCardStatusCompletedEventHandler(ByVal sender As Object, ByVal e As MyCardChangeSohwCardStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MyCardChangeSohwCardStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub MyCardCustIdAuthInsertCompletedEventHandler(ByVal sender As Object, ByVal e As MyCardCustIdAuthInsertCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MyCardCustIdAuthInsertCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub MyCardCcardWhiteListInsertCompletedEventHandler(ByVal sender As Object, ByVal e As MyCardCcardWhiteListInsertCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MyCardCcardWhiteListInsertCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub MyCardQuerySaveGameCardCompletedEventHandler(ByVal sender As Object, ByVal e As MyCardQuerySaveGameCardCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MyCardQuerySaveGameCardCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As MyCardQuerySaveGameCardResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),MyCardQuerySaveGameCardResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub CheckBankProductSnCompletedEventHandler(ByVal sender As Object, ByVal e As CheckBankProductSnCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CheckBankProductSnCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub MyCardGetAnnCompletedEventHandler(ByVal sender As Object, ByVal e As MyCardGetAnnCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MyCardGetAnnCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub QuestionInsertDataCompletedEventHandler(ByVal sender As Object, ByVal e As QuestionInsertDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class QuestionInsertDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub Md5CompletedEventHandler(ByVal sender As Object, ByVal e As Md5CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Md5CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub MyCardTradeQueryCompletedEventHandler(ByVal sender As Object, ByVal e As MyCardTradeQueryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MyCardTradeQueryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As MyCardTradeQueryResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),MyCardTradeQueryResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub StorePoints_ErrorLog_InsertCompletedEventHandler(ByVal sender As Object, ByVal e As StorePoints_ErrorLog_InsertCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class StorePoints_ErrorLog_InsertCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub atmtradeUpdateCompletedEventHandler(ByVal sender As Object, ByVal e As atmtradeUpdateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class atmtradeUpdateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As atmtradeUpdateRE
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),atmtradeUpdateRE)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetAtmSnCompletedEventHandler(ByVal sender As Object, ByVal e As GetAtmSnCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAtmSnCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetAtmSnBillingCompletedEventHandler(ByVal sender As Object, ByVal e As GetAtmSnBillingCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAtmSnBillingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetAtmAccnoForFubonCompletedEventHandler(ByVal sender As Object, ByVal e As GetAtmAccnoForFubonCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAtmAccnoForFubonCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As GetAtmAccnoResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GetAtmAccnoResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetAtmAccnoForFubonBillingCompletedEventHandler(ByVal sender As Object, ByVal e As GetAtmAccnoForFubonBillingCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAtmAccnoForFubonBillingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As GetAtmAccnoResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GetAtmAccnoResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetAtmAccnoForPostWebAtmCompletedEventHandler(ByVal sender As Object, ByVal e As GetAtmAccnoForPostWebAtmCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAtmAccnoForPostWebAtmCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As GetAtmAccnoResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GetAtmAccnoResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetAtmAccnoForPostWebAtmBillingCompletedEventHandler(ByVal sender As Object, ByVal e As GetAtmAccnoForPostWebAtmBillingCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAtmAccnoForPostWebAtmBillingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As GetAtmAccnoResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GetAtmAccnoResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetCardPriceForShangHaiCompletedEventHandler(ByVal sender As Object, ByVal e As GetCardPriceForShangHaiCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCardPriceForShangHaiCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetAtmAccnoForShangHaiCompletedEventHandler(ByVal sender As Object, ByVal e As GetAtmAccnoForShangHaiCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAtmAccnoForShangHaiCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As GetAtmAccnoResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GetAtmAccnoResult)
            End Get
        End Property
    End Class
End Namespace
